{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"European Invoicing (eInvoicing) \u00b6 eInvoicing is a PHP library for creating and reading electronic invoices according to the eInvoicing Directive and European standard . It aims to be 100% compliant with EN 16931 as well as with the most popular CIUS and extensions, such as PEPPOL BIS . Get Started Go to GitHub","title":"Home"},{"location":"#european-invoicing-einvoicing","text":"eInvoicing is a PHP library for creating and reading electronic invoices according to the eInvoicing Directive and European standard . It aims to be 100% compliant with EN 16931 as well as with the most popular CIUS and extensions, such as PEPPOL BIS . Get Started Go to GitHub","title":"European Invoicing (eInvoicing)"},{"location":"getting-started/creating-custom-presets/","text":"Creating custom presets \u00b6 Presets are the way in which this library implements CIUS and extensions. You can find built-in presets in the \\Einvoicing\\Presets namespace. Defining a custom preset is, in most cases, a simple and quick process. You should start by creating a new class that extends \\Einvoicing\\Presets\\AbstractPreset : namespace Acme\\Invoicing\\Presets ; use Einvoicing\\Presets\\AbstractPreset ; class CustomPreset extends AbstractPreset { public function getSpecification () : string { return \"urn:cen.eu:en16931:2017#compliant#urn:acme.com:MY-PRESET:1.0.0\" ; } } The only method you are required to define is getSpecification() as it returns the specification identifier of the CIUS/extension you're implementing. With that, you have created a working custom preset. Next time you instantiate an invoice from it, the latter will be set to the defined specification identifier: use Acme\\Invoicing\\Presets\\CustomPreset ; use Einvoicing\\Invoice ; $inv = new Invoice ( CustomPreset :: class ); echo $inv -> getSpecification (); // urn:cen.eu:en16931:2017#compliant#urn:acme.com:MY-PRESET:1.0.0 Adding and removing business rules \u00b6 Some presets may require additional business rules for an invoice to be considered valid apart from the ones defined in the EN 16931, which will be enforced when calling Invoice::validate() . Given that rules are internally stored as PHP functions or callables, they can essentially be as complex as you need them to be. To add new rules to your preset, create a new method called getRules() in your preset class: use Einvoicing\\Invoice ; use Einvoicing\\Presets\\AbstractPreset ; use function mb_strpos ; class CustomPreset extends AbstractPreset { // [...] public function getRules () : array { $res = []; $res [ 'BR-ACME-01' ] = static function ( Invoice $inv ) { if ( ! empty ( $inv -> getAllowances ())) return \"No allowances at the invoice level are allowed\" ; }; $res [ 'BR-ACME-02' ] = static function ( Invoice $inv ) { if ( mb_strpos ( $inv -> getNumber (), 'ACME-' ) !== 0 ) return \"Invoice number must start with 'ACME-'\" ; }; return $res ; } } As you can see in the above example, a rule returns void or an empty value when the invoice passes that particular validation, and a string detailing the non-compliance reason otherwise. Note The order in which rules are defined matters, as they will be evaluated in the same fashion. EN 16931 business rules are always validated before custom presets rules. Removing or modifying rules from the European standard is also possible by overriding them: $res [ 'BR-03' ] = static function ( Invoice $inv ) { // Now this test (rule) will always pass }; Custom invoice modifications \u00b6 There may be some occasions when presets will require to initialise the invoice instance with some default values. For example, setting a rounding matrix to define the number of decimal places allowed in certain fields. To achieve that, you can make use of the setupInvoice() method of a preset class, which will be called just before finishing creating a new invoice instance: use Einvoicing\\Invoice ; use Einvoicing\\Presets\\AbstractPreset ; class CustomPreset extends AbstractPreset { // [...] public function setupInvoice ( Invoice $invoice ) { $invoice -> setRoundingMatrix ([ \"line/netAmount\" => 4 , \"\" => 2 ]); } }","title":"Creating custom presets"},{"location":"getting-started/creating-custom-presets/#creating-custom-presets","text":"Presets are the way in which this library implements CIUS and extensions. You can find built-in presets in the \\Einvoicing\\Presets namespace. Defining a custom preset is, in most cases, a simple and quick process. You should start by creating a new class that extends \\Einvoicing\\Presets\\AbstractPreset : namespace Acme\\Invoicing\\Presets ; use Einvoicing\\Presets\\AbstractPreset ; class CustomPreset extends AbstractPreset { public function getSpecification () : string { return \"urn:cen.eu:en16931:2017#compliant#urn:acme.com:MY-PRESET:1.0.0\" ; } } The only method you are required to define is getSpecification() as it returns the specification identifier of the CIUS/extension you're implementing. With that, you have created a working custom preset. Next time you instantiate an invoice from it, the latter will be set to the defined specification identifier: use Acme\\Invoicing\\Presets\\CustomPreset ; use Einvoicing\\Invoice ; $inv = new Invoice ( CustomPreset :: class ); echo $inv -> getSpecification (); // urn:cen.eu:en16931:2017#compliant#urn:acme.com:MY-PRESET:1.0.0","title":"Creating custom presets"},{"location":"getting-started/creating-custom-presets/#adding-and-removing-business-rules","text":"Some presets may require additional business rules for an invoice to be considered valid apart from the ones defined in the EN 16931, which will be enforced when calling Invoice::validate() . Given that rules are internally stored as PHP functions or callables, they can essentially be as complex as you need them to be. To add new rules to your preset, create a new method called getRules() in your preset class: use Einvoicing\\Invoice ; use Einvoicing\\Presets\\AbstractPreset ; use function mb_strpos ; class CustomPreset extends AbstractPreset { // [...] public function getRules () : array { $res = []; $res [ 'BR-ACME-01' ] = static function ( Invoice $inv ) { if ( ! empty ( $inv -> getAllowances ())) return \"No allowances at the invoice level are allowed\" ; }; $res [ 'BR-ACME-02' ] = static function ( Invoice $inv ) { if ( mb_strpos ( $inv -> getNumber (), 'ACME-' ) !== 0 ) return \"Invoice number must start with 'ACME-'\" ; }; return $res ; } } As you can see in the above example, a rule returns void or an empty value when the invoice passes that particular validation, and a string detailing the non-compliance reason otherwise. Note The order in which rules are defined matters, as they will be evaluated in the same fashion. EN 16931 business rules are always validated before custom presets rules. Removing or modifying rules from the European standard is also possible by overriding them: $res [ 'BR-03' ] = static function ( Invoice $inv ) { // Now this test (rule) will always pass };","title":"Adding and removing business rules"},{"location":"getting-started/creating-custom-presets/#custom-invoice-modifications","text":"There may be some occasions when presets will require to initialise the invoice instance with some default values. For example, setting a rounding matrix to define the number of decimal places allowed in certain fields. To achieve that, you can make use of the setupInvoice() method of a preset class, which will be called just before finishing creating a new invoice instance: use Einvoicing\\Invoice ; use Einvoicing\\Presets\\AbstractPreset ; class CustomPreset extends AbstractPreset { // [...] public function setupInvoice ( Invoice $invoice ) { $invoice -> setRoundingMatrix ([ \"line/netAmount\" => 4 , \"\" => 2 ]); } }","title":"Custom invoice modifications"},{"location":"getting-started/eu-einvoicing-concepts/","text":"EU e-Invoicing core concepts \u00b6 Prior to using this library, there are some key concepts about European e-Invoicing you should be aware of. EN 16931 \u00b6 The European e-Invoicing standard (EN 16931) describes the semantic data model and business rules of an electronic invoice. In other words, this document (specifically part 1 ) specificies what an invoice is (fields it must/can have) and the possible values those fields can contain. But that's it: it just gives an abstract definition of an invoice without getting into the technical structure (syntax). We need a format (or formats ) for representing electronic invoices as documents (files), and the two specifications allowed by the standard are UBL and CII. The main purpose of this library is to represent invoices as defined by the European standard and convert them from/to its document representations in UBL or CII. UBL and CII \u00b6 UBL (Universal Business Language) and CII (UN/CEFACT Cross Industry Invoice) are two XML-based specifications for exchanging business information. They both already existed prior to the European standard and were then chosen as the only supported syntaxes for representing invoice documents that comply with EN 16931. In theory, they can be used interchangeable with respect to EU e-invoices, although some exceptions may apply depending on additional business rules enforced by a CIUS or an extension. To determine which field from an European invoice goes to which UBL/CII XML node, there are mappings defined for both formats in parts 2 and 3 of the European standard. CIUS and extensions \u00b6 Not all European member states have the same legislation (e.g. tax rates may not be the same across borders) nor all business sectors require the same set of fields to be present in an invoice (e.g. the energy sector may need a document to contain the meter info and meter readings of a client while others don't). To solve this problem, the European e-Invoicing standard proposes the use of CIUS ( Core Invoice Usage Specifications ) and Extensions, which are additional specifications made by EU state governments or other stakeholders that add or remove business rules from the EN 16931. This way, the standard can stay uniform across all European members whilst providing enough flexibility for handling more particular cases, such us the ones mentioned before. The most popular CIUS is PEPPOL BIS Billing 3.0 , a cross-border specification used by multiple countries and international companies from both public and private sectors.","title":"EU e-Invoicing core concepts"},{"location":"getting-started/eu-einvoicing-concepts/#eu-e-invoicing-core-concepts","text":"Prior to using this library, there are some key concepts about European e-Invoicing you should be aware of.","title":"EU e-Invoicing core concepts"},{"location":"getting-started/eu-einvoicing-concepts/#en-16931","text":"The European e-Invoicing standard (EN 16931) describes the semantic data model and business rules of an electronic invoice. In other words, this document (specifically part 1 ) specificies what an invoice is (fields it must/can have) and the possible values those fields can contain. But that's it: it just gives an abstract definition of an invoice without getting into the technical structure (syntax). We need a format (or formats ) for representing electronic invoices as documents (files), and the two specifications allowed by the standard are UBL and CII. The main purpose of this library is to represent invoices as defined by the European standard and convert them from/to its document representations in UBL or CII.","title":"EN 16931"},{"location":"getting-started/eu-einvoicing-concepts/#ubl-and-cii","text":"UBL (Universal Business Language) and CII (UN/CEFACT Cross Industry Invoice) are two XML-based specifications for exchanging business information. They both already existed prior to the European standard and were then chosen as the only supported syntaxes for representing invoice documents that comply with EN 16931. In theory, they can be used interchangeable with respect to EU e-invoices, although some exceptions may apply depending on additional business rules enforced by a CIUS or an extension. To determine which field from an European invoice goes to which UBL/CII XML node, there are mappings defined for both formats in parts 2 and 3 of the European standard.","title":"UBL and CII"},{"location":"getting-started/eu-einvoicing-concepts/#cius-and-extensions","text":"Not all European member states have the same legislation (e.g. tax rates may not be the same across borders) nor all business sectors require the same set of fields to be present in an invoice (e.g. the energy sector may need a document to contain the meter info and meter readings of a client while others don't). To solve this problem, the European e-Invoicing standard proposes the use of CIUS ( Core Invoice Usage Specifications ) and Extensions, which are additional specifications made by EU state governments or other stakeholders that add or remove business rules from the EN 16931. This way, the standard can stay uniform across all European members whilst providing enough flexibility for handling more particular cases, such us the ones mentioned before. The most popular CIUS is PEPPOL BIS Billing 3.0 , a cross-border specification used by multiple countries and international companies from both public and private sectors.","title":"CIUS and extensions"},{"location":"getting-started/importing-exporting-and-validating/","text":"Importing, exporting and validating documents \u00b6 To switch between Invoice instances and UBL/CII documents, this library provides a set of readers and writers for importing and exporting invoices, respectively. For example, if you want to export an invoice to UBL, you'll have to use the UblWriter . Exporting invoices \u00b6 Once you have a working invoice instance, create a writer to export it to a document. For example: use Einvoicing\\Writers\\UblWriter ; $writer = new UblWriter (); $document = $writer -> export ( $inv ); file_put_contents ( __DIR__ . \"/example.xml\" , $document ); Importing documents \u00b6 Similar to exporting invoices, you need a reader to import a document into an invoice instance: use Einvoicing\\Readers\\UblReader ; $reader = new UblReader (); $document = file_get_contents ( __DIR__ . \"/example.xml\" ); try { $inv = $reader -> import ( $document ); } catch ( \\InvalidArgumentException $e ) { // Failed to parse XML document } If the document you're importing has a custom CIUS/extension not supported by this library, you need to register the preset implementing that specification when instantiating the reader: use Einvoicing\\Readers\\UblReader ; use Acme\\Invoicing\\Presets\\CustomPreset ; $reader = new UblReader (); $reader -> registerPreset ( CustomPreset :: class ); $inv = $reader -> import ( $document ); Check the Creating custom presets page for more information. Validating invoices \u00b6 It is good practice to validate an invoice against the business rules defined in the European standard and its preset (if using one) before exporting to and after importing from a document. This step is extremely simple as it only requires calling one method from the invoice instance: use Einvoicing\\Exceptions\\ValidationException ; try { $inv -> validate (); } catch ( ValidationException $e ) { // The invoice is not valid (see exception for more details) } The Invoice::validate() method does not return any value and instead will throw an exception when the invoice is not valid. Warning All readers and writers in this library are silent: they will read and export documents without throwing a validation exception even if the invoice is not valid . Unless you explicitly ask the invoice to be validated, you cannot be sure if it complies with the relevant specifications.","title":"Importing, exporting and validating documents"},{"location":"getting-started/importing-exporting-and-validating/#importing-exporting-and-validating-documents","text":"To switch between Invoice instances and UBL/CII documents, this library provides a set of readers and writers for importing and exporting invoices, respectively. For example, if you want to export an invoice to UBL, you'll have to use the UblWriter .","title":"Importing, exporting and validating documents"},{"location":"getting-started/importing-exporting-and-validating/#exporting-invoices","text":"Once you have a working invoice instance, create a writer to export it to a document. For example: use Einvoicing\\Writers\\UblWriter ; $writer = new UblWriter (); $document = $writer -> export ( $inv ); file_put_contents ( __DIR__ . \"/example.xml\" , $document );","title":"Exporting invoices"},{"location":"getting-started/importing-exporting-and-validating/#importing-documents","text":"Similar to exporting invoices, you need a reader to import a document into an invoice instance: use Einvoicing\\Readers\\UblReader ; $reader = new UblReader (); $document = file_get_contents ( __DIR__ . \"/example.xml\" ); try { $inv = $reader -> import ( $document ); } catch ( \\InvalidArgumentException $e ) { // Failed to parse XML document } If the document you're importing has a custom CIUS/extension not supported by this library, you need to register the preset implementing that specification when instantiating the reader: use Einvoicing\\Readers\\UblReader ; use Acme\\Invoicing\\Presets\\CustomPreset ; $reader = new UblReader (); $reader -> registerPreset ( CustomPreset :: class ); $inv = $reader -> import ( $document ); Check the Creating custom presets page for more information.","title":"Importing documents"},{"location":"getting-started/importing-exporting-and-validating/#validating-invoices","text":"It is good practice to validate an invoice against the business rules defined in the European standard and its preset (if using one) before exporting to and after importing from a document. This step is extremely simple as it only requires calling one method from the invoice instance: use Einvoicing\\Exceptions\\ValidationException ; try { $inv -> validate (); } catch ( ValidationException $e ) { // The invoice is not valid (see exception for more details) } The Invoice::validate() method does not return any value and instead will throw an exception when the invoice is not valid. Warning All readers and writers in this library are silent: they will read and export documents without throwing a validation exception even if the invoice is not valid . Unless you explicitly ask the invoice to be validated, you cannot be sure if it complies with the relevant specifications.","title":"Validating invoices"},{"location":"getting-started/installation/","text":"Getting Started \u00b6 eInvoicing (short for \"European Invoicing\") is a free and open-source library written in PHP for creating and reading electronic invoices compliant with EN 16931 . Requirements \u00b6 In order to install this library, your environment has to meet the following requirements: PHP 7.1 or higher SimpleXML extension for reading and exporting UBL/CII invoices Installation \u00b6 eInvoicing is distributed as a Composer package publicly available through Packagist, so installing it is as simple as adding it as a dependency to your project: composer require josemmo/einvoicing","title":"Installation"},{"location":"getting-started/installation/#getting-started","text":"eInvoicing (short for \"European Invoicing\") is a free and open-source library written in PHP for creating and reading electronic invoices compliant with EN 16931 .","title":"Getting Started"},{"location":"getting-started/installation/#requirements","text":"In order to install this library, your environment has to meet the following requirements: PHP 7.1 or higher SimpleXML extension for reading and exporting UBL/CII invoices","title":"Requirements"},{"location":"getting-started/installation/#installation","text":"eInvoicing is distributed as a Composer package publicly available through Packagist, so installing it is as simple as adding it as a dependency to your project: composer require josemmo/einvoicing","title":"Installation"},{"location":"getting-started/your-first-invoice/","text":"Creating your first invoice \u00b6 There are two ways of creating an invoice from scratch: either instantiating a new blank Invoice or by using a preset (recommended). In this library, presets are the implementation of CIUS and extensions as defined in the European standard. Most probably, the CIUS you'll be using when creating invoices will be PEPPOL BIS as it is widely used in multiple countries and business sectors, but you can use any preset defined in the \\Einvoicing\\Presets namespace or even create a custom one yourself. To create a minimal valid invoice, you'll need four elements: The invoice instance ( Invoice ) A seller party ( Party ) A buyer party ( Party ) Some invoice lines ( InvoiceLine ) Start by creating the invoice instance: use DateTime ; use Einvoicing\\Invoice ; use Einvoicing\\Presets ; $inv = new Invoice ( Presets\\Peppol :: class ); $inv -> setNumber ( 'F-202000012' ) -> setIssueDate ( new DateTime ( '2020-11-01' )) -> setDueDate ( new DateTime ( '2020-11-30' )); Note You can instantiate an invoice without passing a preset argument, although this is highly discouraged. Setting a preset enhances the invoice in multiple aspects as it: Sets the correct specification identifier Overrides the number of decimal places of multiple fields Adds/removes custom validation rules defined by the CIUS or extension implemented by the preset In short, it makes creating invoices easier. Then, declare both parties involved in the transaction (seller and buyer): use Einvoicing\\Identifier ; use Einvoicing\\Party ; $seller = new Party (); $seller -> setElectronicAddress ( new Identifier ( '9482348239847239874' , '0088' )) -> setCompanyId ( new Identifier ( 'AH88726' , '0183' )) -> setName ( 'Seller Name Ltd.' ) -> setTradingName ( 'Seller Name' ) -> setVatNumber ( 'ESA00000000' ) -> setAddress ([ 'Fake Street 123' , 'Apartment Block 2B' ]) -> setCity ( 'Springfield' ) -> setCountry ( 'DE' ); $inv -> setSeller ( $seller ); $buyer = new Party (); $buyer -> setElectronicAddress ( new Identifier ( 'ES12345' , '0002' )) -> setName ( 'Buyer Name Ltd.' ) -> setCountry ( 'FR' ); $inv -> setBuyer ( $buyer ); Lastly, add the invoice lines: use Einvoicing\\InvoiceLine ; // 4 items priced at \u20ac40/unit + 16% VAT $firstLine = new InvoiceLine (); $firstLine -> setName ( 'Product Name' ) -> setPrice ( 40 ) -> setVatRate ( 16 ) -> setQuantity ( 4 ); $inv -> addLine ( $firstLine ); // 27 items price at \u20ac10 per 5 units + 4% VAT $secondLine = new InvoiceLine (); $secondLine -> setName ( 'Line #2' ) -> setDescription ( 'The description for the second line' ) -> setPrice ( 10 , 5 ) -> setQuantity ( 27 ) -> setVatRate ( 4 ); $inv -> addLine ( $secondLine ); Congrats! You have successfully created your first EN 16931 compliant invoice. Now what's left is to export the invoice to a UBL/CII document that can be easily exchanged with third-parties. See the next chapter for more information.","title":"Creating your first invoice"},{"location":"getting-started/your-first-invoice/#creating-your-first-invoice","text":"There are two ways of creating an invoice from scratch: either instantiating a new blank Invoice or by using a preset (recommended). In this library, presets are the implementation of CIUS and extensions as defined in the European standard. Most probably, the CIUS you'll be using when creating invoices will be PEPPOL BIS as it is widely used in multiple countries and business sectors, but you can use any preset defined in the \\Einvoicing\\Presets namespace or even create a custom one yourself. To create a minimal valid invoice, you'll need four elements: The invoice instance ( Invoice ) A seller party ( Party ) A buyer party ( Party ) Some invoice lines ( InvoiceLine ) Start by creating the invoice instance: use DateTime ; use Einvoicing\\Invoice ; use Einvoicing\\Presets ; $inv = new Invoice ( Presets\\Peppol :: class ); $inv -> setNumber ( 'F-202000012' ) -> setIssueDate ( new DateTime ( '2020-11-01' )) -> setDueDate ( new DateTime ( '2020-11-30' )); Note You can instantiate an invoice without passing a preset argument, although this is highly discouraged. Setting a preset enhances the invoice in multiple aspects as it: Sets the correct specification identifier Overrides the number of decimal places of multiple fields Adds/removes custom validation rules defined by the CIUS or extension implemented by the preset In short, it makes creating invoices easier. Then, declare both parties involved in the transaction (seller and buyer): use Einvoicing\\Identifier ; use Einvoicing\\Party ; $seller = new Party (); $seller -> setElectronicAddress ( new Identifier ( '9482348239847239874' , '0088' )) -> setCompanyId ( new Identifier ( 'AH88726' , '0183' )) -> setName ( 'Seller Name Ltd.' ) -> setTradingName ( 'Seller Name' ) -> setVatNumber ( 'ESA00000000' ) -> setAddress ([ 'Fake Street 123' , 'Apartment Block 2B' ]) -> setCity ( 'Springfield' ) -> setCountry ( 'DE' ); $inv -> setSeller ( $seller ); $buyer = new Party (); $buyer -> setElectronicAddress ( new Identifier ( 'ES12345' , '0002' )) -> setName ( 'Buyer Name Ltd.' ) -> setCountry ( 'FR' ); $inv -> setBuyer ( $buyer ); Lastly, add the invoice lines: use Einvoicing\\InvoiceLine ; // 4 items priced at \u20ac40/unit + 16% VAT $firstLine = new InvoiceLine (); $firstLine -> setName ( 'Product Name' ) -> setPrice ( 40 ) -> setVatRate ( 16 ) -> setQuantity ( 4 ); $inv -> addLine ( $firstLine ); // 27 items price at \u20ac10 per 5 units + 4% VAT $secondLine = new InvoiceLine (); $secondLine -> setName ( 'Line #2' ) -> setDescription ( 'The description for the second line' ) -> setPrice ( 10 , 5 ) -> setQuantity ( 27 ) -> setVatRate ( 4 ); $inv -> addLine ( $secondLine ); Congrats! You have successfully created your first EN 16931 compliant invoice. Now what's left is to export the invoice to a UBL/CII document that can be easily exchanged with third-parties. See the next chapter for more information.","title":"Creating your first invoice"},{"location":"reference/allowance-or-charge/","text":"\\Einvoicing\\AllowanceOrCharge \u00b6 getReasonCode() \u00b6 Get reason code public getReasonCode () : string | null Returns string | null \u2014 Reason code setReasonCode() \u00b6 Set reason code public setReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\AllowanceOrCharge Parameters $reasonCode : string | null \u2014 Reason code Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getReason() \u00b6 Get reason public getReason () : string | null Returns string | null \u2014 Reason expressed as text setReason() \u00b6 Set reason public setReason ( $reason : string | null ) : \\Einvoicing\\AllowanceOrCharge Parameters $reason : string | null \u2014 Reason expressed as text Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getAmount() \u00b6 Get amount public getAmount () : float Returns float \u2014 Allowance/charge amount setAmount() \u00b6 Set amount public setAmount ( $amount : float ) : \\Einvoicing\\AllowanceOrCharge Parameters $amount : float \u2014 Allowance/charge amount Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance isPercentage() \u00b6 Is percentage public isPercentage () : bool Returns bool \u2014 Whether amount is a percentage or not markAsPercentage() \u00b6 Mark as percentage public markAsPercentage () : \\Einvoicing\\AllowanceOrCharge Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance markAsFixedAmount() \u00b6 Mark as fixed amount (not a percentage) public markAsFixedAmount () : \\Einvoicing\\AllowanceOrCharge Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getEffectiveAmount() \u00b6 Get effective amount relative to base amount public getEffectiveAmount ( $baseAmount : float ) : float Parameters $baseAmount : float \u2014 Base amount Returns float \u2014 Effective amount getVatCategory() \u00b6 Get VAT category code public getVatCategory () : string Returns string \u2014 VAT category code setVatCategory() \u00b6 Set VAT category code public setVatCategory ( $categoryCode : string ) : \\Einvoicing\\AllowanceOrCharge Parameters $categoryCode : string \u2014 VAT category code Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getVatRate() \u00b6 Get VAT rate public getVatRate () : float | null Returns float | null \u2014 VAT rate as a percentage or NULL when not subject to VAT setVatRate() \u00b6 Set VAT rate public setVatRate ( $rate : float | null ) : \\Einvoicing\\AllowanceOrCharge Parameters $rate : float | null \u2014 VAT rate as a percentage or NULL when not subject to VAT Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getVatExemptionReasonCode() \u00b6 Get VAT exemption reason code public getVatExemptionReasonCode () : string | null Returns string | null \u2014 VAT exemption reason code setVatExemptionReasonCode() \u00b6 Set VAT exemption reason code public setVatExemptionReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\AllowanceOrCharge Parameters $reasonCode : string | null \u2014 VAT exemption reason code Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance getVatExemptionReason() \u00b6 Get VAT exemption reason public getVatExemptionReason () : string | null Returns string | null \u2014 VAT exemption reason expressed as text setVatExemptionReason() \u00b6 Set VAT exemption reason public setVatExemptionReason ( $reason : string | null ) : \\Einvoicing\\AllowanceOrCharge Parameters $reason : string | null \u2014 VAT exemption reason expressed as text Returns \\Einvoicing\\AllowanceOrCharge \u2014 This instance","title":"AllowanceOrCharge"},{"location":"reference/allowance-or-charge/#einvoicingallowanceorcharge","text":"","title":"\\Einvoicing\\AllowanceOrCharge"},{"location":"reference/allowance-or-charge/#getreasoncode","text":"Get reason code public getReasonCode () : string | null","title":"getReasonCode()"},{"location":"reference/allowance-or-charge/#setreasoncode","text":"Set reason code public setReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\AllowanceOrCharge","title":"setReasonCode()"},{"location":"reference/allowance-or-charge/#getreason","text":"Get reason public getReason () : string | null","title":"getReason()"},{"location":"reference/allowance-or-charge/#setreason","text":"Set reason public setReason ( $reason : string | null ) : \\Einvoicing\\AllowanceOrCharge","title":"setReason()"},{"location":"reference/allowance-or-charge/#getamount","text":"Get amount public getAmount () : float","title":"getAmount()"},{"location":"reference/allowance-or-charge/#setamount","text":"Set amount public setAmount ( $amount : float ) : \\Einvoicing\\AllowanceOrCharge","title":"setAmount()"},{"location":"reference/allowance-or-charge/#ispercentage","text":"Is percentage public isPercentage () : bool","title":"isPercentage()"},{"location":"reference/allowance-or-charge/#markaspercentage","text":"Mark as percentage public markAsPercentage () : \\Einvoicing\\AllowanceOrCharge","title":"markAsPercentage()"},{"location":"reference/allowance-or-charge/#markasfixedamount","text":"Mark as fixed amount (not a percentage) public markAsFixedAmount () : \\Einvoicing\\AllowanceOrCharge","title":"markAsFixedAmount()"},{"location":"reference/allowance-or-charge/#geteffectiveamount","text":"Get effective amount relative to base amount public getEffectiveAmount ( $baseAmount : float ) : float","title":"getEffectiveAmount()"},{"location":"reference/allowance-or-charge/#getvatcategory","text":"Get VAT category code public getVatCategory () : string","title":"getVatCategory()"},{"location":"reference/allowance-or-charge/#setvatcategory","text":"Set VAT category code public setVatCategory ( $categoryCode : string ) : \\Einvoicing\\AllowanceOrCharge","title":"setVatCategory()"},{"location":"reference/allowance-or-charge/#getvatrate","text":"Get VAT rate public getVatRate () : float | null","title":"getVatRate()"},{"location":"reference/allowance-or-charge/#setvatrate","text":"Set VAT rate public setVatRate ( $rate : float | null ) : \\Einvoicing\\AllowanceOrCharge","title":"setVatRate()"},{"location":"reference/allowance-or-charge/#getvatexemptionreasoncode","text":"Get VAT exemption reason code public getVatExemptionReasonCode () : string | null","title":"getVatExemptionReasonCode()"},{"location":"reference/allowance-or-charge/#setvatexemptionreasoncode","text":"Set VAT exemption reason code public setVatExemptionReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\AllowanceOrCharge","title":"setVatExemptionReasonCode()"},{"location":"reference/allowance-or-charge/#getvatexemptionreason","text":"Get VAT exemption reason public getVatExemptionReason () : string | null","title":"getVatExemptionReason()"},{"location":"reference/allowance-or-charge/#setvatexemptionreason","text":"Set VAT exemption reason public setVatExemptionReason ( $reason : string | null ) : \\Einvoicing\\AllowanceOrCharge","title":"setVatExemptionReason()"},{"location":"reference/attachment/","text":"\\Einvoicing\\Attachment \u00b6 getId() \u00b6 Get attachment ID public getId () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Attachment ID setId() \u00b6 Set attachment ID public setId ( $id : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Attachment Parameters $id : \\Einvoicing\\Identifier | null \u2014 Attachment ID Returns \\Einvoicing\\Attachment \u2014 Attachment instance getDescription() \u00b6 Get description public getDescription () : string | null Returns string | null \u2014 Attachment description setDescription() \u00b6 Set description public setDescription ( $description : string | null ) : \\Einvoicing\\Attachment Parameters $description : string | null \u2014 Attachment description Returns \\Einvoicing\\Attachment \u2014 Attachment instance hasExternalUrl() \u00b6 Has external URL public hasExternalUrl () : bool Returns bool \u2014 Whether this attachment has an external URL or not getExternalUrl() \u00b6 Get external URL public getExternalUrl () : string | null Returns string | null \u2014 Attachment external URL setExternalUrl() \u00b6 Set external URL public setExternalUrl ( $externalUrl : string | null ) : \\Einvoicing\\Attachment Parameters $externalUrl : string | null \u2014 Attachment external URL Returns \\Einvoicing\\Attachment \u2014 Attachment instance getFilename() \u00b6 Get filename public getFilename () : string | null Returns string | null \u2014 Attachment filename setFilename() \u00b6 Set filename public setFilename ( $filename : string | null ) : \\Einvoicing\\Attachment Parameters $filename : string | null \u2014 Attachment filename Returns \\Einvoicing\\Attachment \u2014 Attachment instance getMimeCode() \u00b6 Get mime code public getMimeCode () : string | null Returns string | null \u2014 Attachment mime code setMimeCode() \u00b6 Set mime code public setMimeCode ( $mimeCode : string | null ) : \\Einvoicing\\Attachment Parameters $mimeCode : string | null \u2014 Attachment mime code Returns \\Einvoicing\\Attachment \u2014 Attachment instance hasContents() \u00b6 Has embedded contents public hasContents () : bool Returns bool \u2014 Whether this attachment has embedded contents or not getContents() \u00b6 Get embedded contents public getContents () : string | null Returns string | null \u2014 Attachment contents setContents() \u00b6 Set embedded contents public setContents ( $content : string | null ) : \\Einvoicing\\Attachment Parameters $content : string | null \u2014 Attachment contents Returns \\Einvoicing\\Attachment \u2014 Attachment instance","title":"Attachment"},{"location":"reference/attachment/#einvoicingattachment","text":"","title":"\\Einvoicing\\Attachment"},{"location":"reference/attachment/#getid","text":"Get attachment ID public getId () : \\Einvoicing\\Identifier | null","title":"getId()"},{"location":"reference/attachment/#setid","text":"Set attachment ID public setId ( $id : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Attachment","title":"setId()"},{"location":"reference/attachment/#getdescription","text":"Get description public getDescription () : string | null","title":"getDescription()"},{"location":"reference/attachment/#setdescription","text":"Set description public setDescription ( $description : string | null ) : \\Einvoicing\\Attachment","title":"setDescription()"},{"location":"reference/attachment/#hasexternalurl","text":"Has external URL public hasExternalUrl () : bool","title":"hasExternalUrl()"},{"location":"reference/attachment/#getexternalurl","text":"Get external URL public getExternalUrl () : string | null","title":"getExternalUrl()"},{"location":"reference/attachment/#setexternalurl","text":"Set external URL public setExternalUrl ( $externalUrl : string | null ) : \\Einvoicing\\Attachment","title":"setExternalUrl()"},{"location":"reference/attachment/#getfilename","text":"Get filename public getFilename () : string | null","title":"getFilename()"},{"location":"reference/attachment/#setfilename","text":"Set filename public setFilename ( $filename : string | null ) : \\Einvoicing\\Attachment","title":"setFilename()"},{"location":"reference/attachment/#getmimecode","text":"Get mime code public getMimeCode () : string | null","title":"getMimeCode()"},{"location":"reference/attachment/#setmimecode","text":"Set mime code public setMimeCode ( $mimeCode : string | null ) : \\Einvoicing\\Attachment","title":"setMimeCode()"},{"location":"reference/attachment/#hascontents","text":"Has embedded contents public hasContents () : bool","title":"hasContents()"},{"location":"reference/attachment/#getcontents","text":"Get embedded contents public getContents () : string | null","title":"getContents()"},{"location":"reference/attachment/#setcontents","text":"Set embedded contents public setContents ( $content : string | null ) : \\Einvoicing\\Attachment","title":"setContents()"},{"location":"reference/attribute/","text":"\\Einvoicing\\Attribute \u00b6 __construct() \u00b6 Class constructor public __construct ( $name : string , $value : string ) Parameters $name : string \u2014 Attribute name $value : string \u2014 Attribute value getName() \u00b6 Get attribute name public getName () : string Returns string \u2014 Attribute name setName() \u00b6 Set attribute name public setName ( $name : string ) : \\Einvoicing\\Attribute Parameters $name : string \u2014 Attribute name Returns \\Einvoicing\\Attribute \u2014 Attribute instance getValue() \u00b6 Get attribute value public getValue () : string Returns string \u2014 Attribute value setValue() \u00b6 Set attribute value public setValue ( $value : string ) : \\Einvoicing\\Attribute Parameters $value : string \u2014 Attribute value Returns \\Einvoicing\\Attribute \u2014 Attribute instance","title":"Attribute"},{"location":"reference/attribute/#einvoicingattribute","text":"","title":"\\Einvoicing\\Attribute"},{"location":"reference/attribute/#__construct","text":"Class constructor public __construct ( $name : string , $value : string )","title":"__construct()"},{"location":"reference/attribute/#getname","text":"Get attribute name public getName () : string","title":"getName()"},{"location":"reference/attribute/#setname","text":"Set attribute name public setName ( $name : string ) : \\Einvoicing\\Attribute","title":"setName()"},{"location":"reference/attribute/#getvalue","text":"Get attribute value public getValue () : string","title":"getValue()"},{"location":"reference/attribute/#setvalue","text":"Set attribute value public setValue ( $value : string ) : \\Einvoicing\\Attribute","title":"setValue()"},{"location":"reference/card/","text":"\\Einvoicing\\Payments\\Card \u00b6 getPan() \u00b6 Get card PAN (Primary Account Number) public getPan () : string | null Returns string | null \u2014 Card PAN setPan() \u00b6 Set card PAN (Primary Account Number) public setPan ( $pan : string ) : \\Einvoicing\\Payments\\Card Parameters $pan : string \u2014 Card PAN Returns \\Einvoicing\\Payments\\Card \u2014 Card instance getNetwork() \u00b6 Get card network ID public getNetwork () : string | null Returns string | null \u2014 Card network ID setNetwork() \u00b6 Set card network ID public setNetwork ( $network : string | null ) : \\Einvoicing\\Payments\\Card Parameters $network : string | null \u2014 Card network ID Returns \\Einvoicing\\Payments\\Card \u2014 Card instance getHolder() \u00b6 Get card holder name public getHolder () : string | null Returns string | null \u2014 Card holder name setHolder() \u00b6 Set card holder name public setHolder ( $holder : string | null ) : \\Einvoicing\\Payments\\Card Parameters $holder : string | null \u2014 Card holder name Returns \\Einvoicing\\Payments\\Card \u2014 Card instance","title":"Payments\\Card"},{"location":"reference/card/#einvoicingpaymentscard","text":"","title":"\\Einvoicing\\Payments\\Card"},{"location":"reference/card/#getpan","text":"Get card PAN (Primary Account Number) public getPan () : string | null","title":"getPan()"},{"location":"reference/card/#setpan","text":"Set card PAN (Primary Account Number) public setPan ( $pan : string ) : \\Einvoicing\\Payments\\Card","title":"setPan()"},{"location":"reference/card/#getnetwork","text":"Get card network ID public getNetwork () : string | null","title":"getNetwork()"},{"location":"reference/card/#setnetwork","text":"Set card network ID public setNetwork ( $network : string | null ) : \\Einvoicing\\Payments\\Card","title":"setNetwork()"},{"location":"reference/card/#getholder","text":"Get card holder name public getHolder () : string | null","title":"getHolder()"},{"location":"reference/card/#setholder","text":"Set card holder name public setHolder ( $holder : string | null ) : \\Einvoicing\\Payments\\Card","title":"setHolder()"},{"location":"reference/cius-at-gov/","text":"\\Einvoicing\\Presets\\CiusAtGov \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\CiusAtGov"},{"location":"reference/cius-at-gov/#einvoicingpresetsciusatgov","text":"","title":"\\Einvoicing\\Presets\\CiusAtGov"},{"location":"reference/cius-at-gov/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/cius-at-gov/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/cius-at-gov/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/cius-at-nat/","text":"\\Einvoicing\\Presets\\CiusAtNat \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\CiusAtNat"},{"location":"reference/cius-at-nat/#einvoicingpresetsciusatnat","text":"","title":"\\Einvoicing\\Presets\\CiusAtNat"},{"location":"reference/cius-at-nat/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/cius-at-nat/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/cius-at-nat/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/cius-es-face/","text":"\\Einvoicing\\Presets\\CiusEsFace \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\CiusEsFace"},{"location":"reference/cius-es-face/#einvoicingpresetsciusesface","text":"","title":"\\Einvoicing\\Presets\\CiusEsFace"},{"location":"reference/cius-es-face/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/cius-es-face/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/cius-es-face/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/cius-it/","text":"\\Einvoicing\\Presets\\CiusIt \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\CiusIt"},{"location":"reference/cius-it/#einvoicingpresetsciusit","text":"","title":"\\Einvoicing\\Presets\\CiusIt"},{"location":"reference/cius-it/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/cius-it/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/cius-it/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/cius-ro/","text":"\\Einvoicing\\Presets\\CiusRo \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\CiusRo"},{"location":"reference/cius-ro/#einvoicingpresetsciusro","text":"","title":"\\Einvoicing\\Presets\\CiusRo"},{"location":"reference/cius-ro/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/cius-ro/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/cius-ro/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/delivery/","text":"\\Einvoicing\\Delivery \u00b6 getName() \u00b6 Get party name public getName () : string | null Returns string | null \u2014 Party name setName() \u00b6 Set party name public setName ( $name : string | null ) : \\Einvoicing\\Delivery Parameters $name : string | null \u2014 Party name Returns \\Einvoicing\\Delivery \u2014 Delivery instance getDate() \u00b6 Get actual delivery date public getDate () : \\DateTime | null Returns \\DateTime | null \u2014 Actual delivery date setDate() \u00b6 Set actual delivery date public setDate ( $date : \\DateTime | null ) : \\Einvoicing\\Delivery Parameters $date : \\DateTime | null \u2014 Actual delivery date Returns \\Einvoicing\\Delivery \u2014 Delivery instance getLocationIdentifier() \u00b6 Get delivery location identifier public getLocationIdentifier () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Delivery location identifier setLocationIdentifier() \u00b6 Set delivery location identifier public setLocationIdentifier ( $identifier : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Delivery Parameters $identifier : \\Einvoicing\\Identifier | null \u2014 Delivery location identifier Returns \\Einvoicing\\Delivery \u2014 Delivery instance getAddress() \u00b6 Get address lines public getAddress () : string [] Returns string [] \u2014 Address lines (up to 3 lines) setAddress() \u00b6 Set address lines public setAddress ( $addressLines : string []) : \\Einvoicing\\Delivery Parameters $addressLines : string [] \u2014 Address lines (up to 3 lines) Returns \\Einvoicing\\Delivery \u2014 This instance Throws \\InvalidArgumentException if more than 3 lines are provided getCity() \u00b6 Get city name public getCity () : string | null Returns string | null \u2014 City name setCity() \u00b6 Set city name public setCity ( $city : string | null ) : \\Einvoicing\\Delivery Parameters $city : string | null \u2014 City name Returns \\Einvoicing\\Delivery \u2014 This instance getPostalCode() \u00b6 Get postal code public getPostalCode () : string | null Returns string | null \u2014 Postal code setPostalCode() \u00b6 Set postal code public setPostalCode ( $postalCode : string | null ) : \\Einvoicing\\Delivery Parameters $postalCode : string | null \u2014 Postal code Returns \\Einvoicing\\Delivery \u2014 This instance getSubdivision() \u00b6 Get country subdivision (region, province, etc.) public getSubdivision () : string | null Returns string | null \u2014 Country subdivision setSubdivision() \u00b6 Set country subdivision (region, province, etc.) public setSubdivision ( $subdivision : string | null ) : \\Einvoicing\\Delivery Parameters $subdivision : string | null \u2014 Country subdivision Returns \\Einvoicing\\Delivery \u2014 This instance getCountry() \u00b6 Get country code public getCountry () : string | null Returns string | null \u2014 Country code setCountry() \u00b6 Set country code public setCountry ( $countryCode : string | null ) : \\Einvoicing\\Delivery Parameters $countryCode : string | null \u2014 Country code Returns \\Einvoicing\\Delivery \u2014 This instance","title":"Delivery"},{"location":"reference/delivery/#einvoicingdelivery","text":"","title":"\\Einvoicing\\Delivery"},{"location":"reference/delivery/#getname","text":"Get party name public getName () : string | null","title":"getName()"},{"location":"reference/delivery/#setname","text":"Set party name public setName ( $name : string | null ) : \\Einvoicing\\Delivery","title":"setName()"},{"location":"reference/delivery/#getdate","text":"Get actual delivery date public getDate () : \\DateTime | null","title":"getDate()"},{"location":"reference/delivery/#setdate","text":"Set actual delivery date public setDate ( $date : \\DateTime | null ) : \\Einvoicing\\Delivery","title":"setDate()"},{"location":"reference/delivery/#getlocationidentifier","text":"Get delivery location identifier public getLocationIdentifier () : \\Einvoicing\\Identifier | null","title":"getLocationIdentifier()"},{"location":"reference/delivery/#setlocationidentifier","text":"Set delivery location identifier public setLocationIdentifier ( $identifier : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Delivery","title":"setLocationIdentifier()"},{"location":"reference/delivery/#getaddress","text":"Get address lines public getAddress () : string []","title":"getAddress()"},{"location":"reference/delivery/#setaddress","text":"Set address lines public setAddress ( $addressLines : string []) : \\Einvoicing\\Delivery","title":"setAddress()"},{"location":"reference/delivery/#getcity","text":"Get city name public getCity () : string | null","title":"getCity()"},{"location":"reference/delivery/#setcity","text":"Set city name public setCity ( $city : string | null ) : \\Einvoicing\\Delivery","title":"setCity()"},{"location":"reference/delivery/#getpostalcode","text":"Get postal code public getPostalCode () : string | null","title":"getPostalCode()"},{"location":"reference/delivery/#setpostalcode","text":"Set postal code public setPostalCode ( $postalCode : string | null ) : \\Einvoicing\\Delivery","title":"setPostalCode()"},{"location":"reference/delivery/#getsubdivision","text":"Get country subdivision (region, province, etc.) public getSubdivision () : string | null","title":"getSubdivision()"},{"location":"reference/delivery/#setsubdivision","text":"Set country subdivision (region, province, etc.) public setSubdivision ( $subdivision : string | null ) : \\Einvoicing\\Delivery","title":"setSubdivision()"},{"location":"reference/delivery/#getcountry","text":"Get country code public getCountry () : string | null","title":"getCountry()"},{"location":"reference/delivery/#setcountry","text":"Set country code public setCountry ( $countryCode : string | null ) : \\Einvoicing\\Delivery","title":"setCountry()"},{"location":"reference/identifier/","text":"\\Einvoicing\\Identifier \u00b6 __construct() \u00b6 Class constructor public __construct ( $value : string , $scheme : string | null = null ) Parameters $value : string \u2014 Value $scheme : string | null \u2014 Scheme ID getValue() \u00b6 Get value public getValue () : string Returns string \u2014 Value setValue() \u00b6 Set value public setValue ( $value : string ) : \\Einvoicing\\Identifier Parameters $value : string \u2014 Value Returns \\Einvoicing\\Identifier \u2014 Identifier instance getScheme() \u00b6 Get scheme ID public getScheme () : string | null Returns string | null \u2014 Scheme ID setScheme() \u00b6 Set scheme ID public setScheme ( $scheme : string | null ) : \\Einvoicing\\Identifier Parameters $scheme : string | null \u2014 Scheme ID Returns \\Einvoicing\\Identifier \u2014 Identifier instance","title":"Identifier"},{"location":"reference/identifier/#einvoicingidentifier","text":"","title":"\\Einvoicing\\Identifier"},{"location":"reference/identifier/#__construct","text":"Class constructor public __construct ( $value : string , $scheme : string | null = null )","title":"__construct()"},{"location":"reference/identifier/#getvalue","text":"Get value public getValue () : string","title":"getValue()"},{"location":"reference/identifier/#setvalue","text":"Set value public setValue ( $value : string ) : \\Einvoicing\\Identifier","title":"setValue()"},{"location":"reference/identifier/#getscheme","text":"Get scheme ID public getScheme () : string | null","title":"getScheme()"},{"location":"reference/identifier/#setscheme","text":"Set scheme ID public setScheme ( $scheme : string | null ) : \\Einvoicing\\Identifier","title":"setScheme()"},{"location":"reference/invoice-line/","text":"\\Einvoicing\\InvoiceLine \u00b6 getId() \u00b6 Get invoice line identifier public getId () : string | null Returns string | null \u2014 Invoice line identifier setId() \u00b6 Set invoice line identifier public setId ( $id : string ) : \\Einvoicing\\InvoiceLine Parameters $id : string \u2014 Invoice line identifier Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getOrderLineReference() \u00b6 Get order line reference public getOrderLineReference () : string | null Returns string | null \u2014 Order line reference setOrderLineReference() \u00b6 Set order line reference public setOrderLineReference ( $reference : string | null ) : \\Einvoicing\\InvoiceLine Parameters $reference : string | null \u2014 Order line reference Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getName() \u00b6 Get item name public getName () : string | null Returns string | null \u2014 Item name setName() \u00b6 Set item name public setName ( $name : string ) : \\Einvoicing\\InvoiceLine Parameters $name : string \u2014 Item name Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getDescription() \u00b6 Get item description public getDescription () : string | null Returns string | null \u2014 Item description setDescription() \u00b6 Set item description public setDescription ( $description : string | null ) : \\Einvoicing\\InvoiceLine Parameters $description : string | null \u2014 Item description Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getOriginCountry() \u00b6 Get item origin country public getOriginCountry () : string | null Returns string | null \u2014 Item origin country code setOriginCountry() \u00b6 Set item origin country public setOriginCountry ( $originCountry : string | null ) : \\Einvoicing\\InvoiceLine Parameters $originCountry : string | null \u2014 Item origin country code Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getNote() \u00b6 Get invoice line note public getNote () : string | null Returns string | null \u2014 Invoice line note setNote() \u00b6 Set invoice line note public setNote ( $note : string | null ) : \\Einvoicing\\InvoiceLine Parameters $note : string | null \u2014 Invoice line note Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getStandardIdentifier() \u00b6 Get item standard identifier public getStandardIdentifier () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Item standard identifier setStandardIdentifier() \u00b6 Set item standard identifier public setStandardIdentifier ( $identifier : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\InvoiceLine Parameters $identifier : \\Einvoicing\\Identifier | null \u2014 Item standard identifier Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getBuyerIdentifier() \u00b6 Get buyer identifier public getBuyerIdentifier () : string | null Returns string | null \u2014 Buyer identifier setBuyerIdentifier() \u00b6 Set buyer identifier public setBuyerIdentifier ( $identifier : string | null ) : \\Einvoicing\\InvoiceLine Parameters $identifier : string | null \u2014 Buyer identifier Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getSellerIdentifier() \u00b6 Get seller identifier public getSellerIdentifier () : string | null Returns string | null \u2014 Seller identifier setSellerIdentifier() \u00b6 Set seller identifier public setSellerIdentifier ( $identifier : string | null ) : \\Einvoicing\\InvoiceLine Parameters $identifier : string | null \u2014 Seller identifier Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getQuantity() \u00b6 Get quantity public getQuantity () : float Returns float \u2014 Quantity setQuantity() \u00b6 Set quantity public setQuantity ( $quantity : float ) : \\Einvoicing\\InvoiceLine Parameters $quantity : float \u2014 Quantity Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getUnit() \u00b6 Get unit code public getUnit () : string Returns string \u2014 Unit code setUnit() \u00b6 Set unit code public setUnit ( $unitCode : string ) : \\Einvoicing\\InvoiceLine Parameters $unitCode : string \u2014 Unit code Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getPrice() \u00b6 Get price public getPrice () : float | null Returns float | null \u2014 Price setPrice() \u00b6 Set price public setPrice ( $price : float , $baseQuantity : float | null = null ) : \\Einvoicing\\InvoiceLine Parameters $price : float \u2014 Price $baseQuantity : float | null \u2014 Base quantity Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getBaseQuantity() \u00b6 Get base quantity public getBaseQuantity () : float Returns float \u2014 Base quantity setBaseQuantity() \u00b6 Set base quantity public setBaseQuantity ( $baseQuantity : float ) : \\Einvoicing\\InvoiceLine Parameters $baseQuantity : float \u2014 Base quantity Returns \\Einvoicing\\InvoiceLine \u2014 Invoice line instance getNetAmountBeforeAllowancesCharges() \u00b6 Get total net amount (without VAT) before allowances/charges public getNetAmountBeforeAllowancesCharges () : float | null Returns float | null \u2014 Net amount before allowances/charges getAllowancesAmount() \u00b6 Get allowances total amount public getAllowancesAmount () : float Returns float \u2014 Allowances total amount getChargesAmount() \u00b6 Get charges total amount public getChargesAmount () : float Returns float \u2014 Charges total amount getNetAmount() \u00b6 Get total net amount (without VAT) NOTE: inclusive of line level allowances and charges public getNetAmount () : float | null Returns float | null \u2014 Net amount getAllowances() \u00b6 Get allowances public getAllowances () : \\Einvoicing\\AllowanceOrCharge [] Returns \\Einvoicing\\AllowanceOrCharge [] \u2014 Array of allowances addAllowance() \u00b6 Add allowance public addAllowance ( $allowance : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\InvoiceLine Parameters $allowance : \\Einvoicing\\AllowanceOrCharge \u2014 Allowance instance Returns \\Einvoicing\\InvoiceLine \u2014 This instance removeAllowance() \u00b6 Remove allowance public removeAllowance ( $index : int ) : \\Einvoicing\\InvoiceLine Parameters $index : int \u2014 Allowance index Returns \\Einvoicing\\InvoiceLine \u2014 This instance Throws \\OutOfBoundsException if allowance index is out of bounds clearAllowances() \u00b6 Clear all allowances public clearAllowances () : \\Einvoicing\\InvoiceLine Returns \\Einvoicing\\InvoiceLine \u2014 This instance getCharges() \u00b6 Get charges public getCharges () : \\Einvoicing\\AllowanceOrCharge [] Returns \\Einvoicing\\AllowanceOrCharge [] \u2014 Array of charges addCharge() \u00b6 Add charge public addCharge ( $charge : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\InvoiceLine Parameters $charge : \\Einvoicing\\AllowanceOrCharge \u2014 Charge instance Returns \\Einvoicing\\InvoiceLine \u2014 This instance removeCharge() \u00b6 Remove charge public removeCharge ( $index : int ) : \\Einvoicing\\InvoiceLine Parameters $index : int \u2014 Charge index Returns \\Einvoicing\\InvoiceLine \u2014 This instance Throws \\OutOfBoundsException if charge index is out of bounds clearCharges() \u00b6 Clear all charges public clearCharges () : \\Einvoicing\\InvoiceLine Returns \\Einvoicing\\InvoiceLine \u2014 This instance getAttributes() \u00b6 Get attributes public getAttributes () : \\Einvoicing\\Attribute [] Returns \\Einvoicing\\Attribute [] \u2014 Array of attributes addAttribute() \u00b6 Add attribute public addAttribute ( $attribute : \\Einvoicing\\Attribute ) : \\Einvoicing\\InvoiceLine Parameters $attribute : \\Einvoicing\\Attribute \u2014 Attribute instance Returns \\Einvoicing\\InvoiceLine \u2014 This instance removeAttribute() \u00b6 Remove attribute public removeAttribute ( $index : int ) : \\Einvoicing\\InvoiceLine Parameters $index : int \u2014 Attribute index Returns \\Einvoicing\\InvoiceLine \u2014 This instance Throws \\OutOfBoundsException if attribute index is out of bounds clearAttributes() \u00b6 Clear all attributes public clearAttributes () : \\Einvoicing\\InvoiceLine Returns \\Einvoicing\\InvoiceLine \u2014 This instance getAttribute() \u00b6 Get attribute value public getAttribute ( $name : string ) : string | null Parameters $name : string \u2014 Attribute name Returns string | null \u2014 Value from occurrence with given name or NULL if not found setAttribute() \u00b6 Set attribute value public setAttribute ( $name : string , $value : string | null ) : \\Einvoicing\\InvoiceLine Parameters $name : string \u2014 Attribute name $value : string | null \u2014 New attribute value for first found occurrence, NULL to remove Returns \\Einvoicing\\InvoiceLine \u2014 This instance getBuyerAccountingReference() \u00b6 Get buyer accounting reference public getBuyerAccountingReference () : string | null Returns string | null \u2014 Buyer accounting reference setBuyerAccountingReference() \u00b6 Set buyer accounting reference public setBuyerAccountingReference ( $buyerAccountingReference : string | null ) : \\Einvoicing\\InvoiceLine Parameters $buyerAccountingReference : string | null \u2014 Buyer accounting reference Returns \\Einvoicing\\InvoiceLine \u2014 This instance getClassificationIdentifiers() \u00b6 Get classification identifiers public getClassificationIdentifiers () : \\Einvoicing\\Identifier [] Returns \\Einvoicing\\Identifier [] \u2014 Array of identifiers addClassificationIdentifier() \u00b6 Add classification identifier public addClassificationIdentifier ( $identifier : \\Einvoicing\\Identifier ) : \\Einvoicing\\InvoiceLine Parameters $identifier : \\Einvoicing\\Identifier \u2014 Identifier instance Returns \\Einvoicing\\InvoiceLine \u2014 This instance removeClassificationIdentifier() \u00b6 Remove classification identifier public removeClassificationIdentifier ( $index : int ) : \\Einvoicing\\InvoiceLine Parameters $index : int \u2014 Identifier index Returns \\Einvoicing\\InvoiceLine \u2014 This instance Throws \\OutOfBoundsException if identifier index is out of bounds clearClassificationIdentifiers() \u00b6 Clear all classification identifiers public clearClassificationIdentifiers () : \\Einvoicing\\InvoiceLine Returns \\Einvoicing\\InvoiceLine \u2014 This instance getPeriodStartDate() \u00b6 Get period start date public getPeriodStartDate () : \\DateTime | null Returns \\DateTime | null \u2014 Period start date setPeriodStartDate() \u00b6 Set period start date public setPeriodStartDate ( $periodStartDate : \\DateTime | null ) : \\Einvoicing\\InvoiceLine Parameters $periodStartDate : \\DateTime | null \u2014 Period start date Returns \\Einvoicing\\InvoiceLine \u2014 This instance getPeriodEndDate() \u00b6 Get period end date public getPeriodEndDate () : \\DateTime | null Returns \\DateTime | null \u2014 Period end date setPeriodEndDate() \u00b6 Set period end date public setPeriodEndDate ( $periodEndDate : \\DateTime | null ) : \\Einvoicing\\InvoiceLine Parameters $periodEndDate : \\DateTime | null \u2014 Period end date Returns \\Einvoicing\\InvoiceLine \u2014 This instance getVatCategory() \u00b6 Get VAT category code public getVatCategory () : string Returns string \u2014 VAT category code setVatCategory() \u00b6 Set VAT category code public setVatCategory ( $categoryCode : string ) : \\Einvoicing\\InvoiceLine Parameters $categoryCode : string \u2014 VAT category code Returns \\Einvoicing\\InvoiceLine \u2014 This instance getVatRate() \u00b6 Get VAT rate public getVatRate () : float | null Returns float | null \u2014 VAT rate as a percentage or NULL when not subject to VAT setVatRate() \u00b6 Set VAT rate public setVatRate ( $rate : float | null ) : \\Einvoicing\\InvoiceLine Parameters $rate : float | null \u2014 VAT rate as a percentage or NULL when not subject to VAT Returns \\Einvoicing\\InvoiceLine \u2014 This instance getVatExemptionReasonCode() \u00b6 Get VAT exemption reason code public getVatExemptionReasonCode () : string | null Returns string | null \u2014 VAT exemption reason code setVatExemptionReasonCode() \u00b6 Set VAT exemption reason code public setVatExemptionReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\InvoiceLine Parameters $reasonCode : string | null \u2014 VAT exemption reason code Returns \\Einvoicing\\InvoiceLine \u2014 This instance getVatExemptionReason() \u00b6 Get VAT exemption reason public getVatExemptionReason () : string | null Returns string | null \u2014 VAT exemption reason expressed as text setVatExemptionReason() \u00b6 Set VAT exemption reason public setVatExemptionReason ( $reason : string | null ) : \\Einvoicing\\InvoiceLine Parameters $reason : string | null \u2014 VAT exemption reason expressed as text Returns \\Einvoicing\\InvoiceLine \u2014 This instance","title":"InvoiceLine"},{"location":"reference/invoice-line/#einvoicinginvoiceline","text":"","title":"\\Einvoicing\\InvoiceLine"},{"location":"reference/invoice-line/#getid","text":"Get invoice line identifier public getId () : string | null","title":"getId()"},{"location":"reference/invoice-line/#setid","text":"Set invoice line identifier public setId ( $id : string ) : \\Einvoicing\\InvoiceLine","title":"setId()"},{"location":"reference/invoice-line/#getorderlinereference","text":"Get order line reference public getOrderLineReference () : string | null","title":"getOrderLineReference()"},{"location":"reference/invoice-line/#setorderlinereference","text":"Set order line reference public setOrderLineReference ( $reference : string | null ) : \\Einvoicing\\InvoiceLine","title":"setOrderLineReference()"},{"location":"reference/invoice-line/#getname","text":"Get item name public getName () : string | null","title":"getName()"},{"location":"reference/invoice-line/#setname","text":"Set item name public setName ( $name : string ) : \\Einvoicing\\InvoiceLine","title":"setName()"},{"location":"reference/invoice-line/#getdescription","text":"Get item description public getDescription () : string | null","title":"getDescription()"},{"location":"reference/invoice-line/#setdescription","text":"Set item description public setDescription ( $description : string | null ) : \\Einvoicing\\InvoiceLine","title":"setDescription()"},{"location":"reference/invoice-line/#getorigincountry","text":"Get item origin country public getOriginCountry () : string | null","title":"getOriginCountry()"},{"location":"reference/invoice-line/#setorigincountry","text":"Set item origin country public setOriginCountry ( $originCountry : string | null ) : \\Einvoicing\\InvoiceLine","title":"setOriginCountry()"},{"location":"reference/invoice-line/#getnote","text":"Get invoice line note public getNote () : string | null","title":"getNote()"},{"location":"reference/invoice-line/#setnote","text":"Set invoice line note public setNote ( $note : string | null ) : \\Einvoicing\\InvoiceLine","title":"setNote()"},{"location":"reference/invoice-line/#getstandardidentifier","text":"Get item standard identifier public getStandardIdentifier () : \\Einvoicing\\Identifier | null","title":"getStandardIdentifier()"},{"location":"reference/invoice-line/#setstandardidentifier","text":"Set item standard identifier public setStandardIdentifier ( $identifier : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\InvoiceLine","title":"setStandardIdentifier()"},{"location":"reference/invoice-line/#getbuyeridentifier","text":"Get buyer identifier public getBuyerIdentifier () : string | null","title":"getBuyerIdentifier()"},{"location":"reference/invoice-line/#setbuyeridentifier","text":"Set buyer identifier public setBuyerIdentifier ( $identifier : string | null ) : \\Einvoicing\\InvoiceLine","title":"setBuyerIdentifier()"},{"location":"reference/invoice-line/#getselleridentifier","text":"Get seller identifier public getSellerIdentifier () : string | null","title":"getSellerIdentifier()"},{"location":"reference/invoice-line/#setselleridentifier","text":"Set seller identifier public setSellerIdentifier ( $identifier : string | null ) : \\Einvoicing\\InvoiceLine","title":"setSellerIdentifier()"},{"location":"reference/invoice-line/#getquantity","text":"Get quantity public getQuantity () : float","title":"getQuantity()"},{"location":"reference/invoice-line/#setquantity","text":"Set quantity public setQuantity ( $quantity : float ) : \\Einvoicing\\InvoiceLine","title":"setQuantity()"},{"location":"reference/invoice-line/#getunit","text":"Get unit code public getUnit () : string","title":"getUnit()"},{"location":"reference/invoice-line/#setunit","text":"Set unit code public setUnit ( $unitCode : string ) : \\Einvoicing\\InvoiceLine","title":"setUnit()"},{"location":"reference/invoice-line/#getprice","text":"Get price public getPrice () : float | null","title":"getPrice()"},{"location":"reference/invoice-line/#setprice","text":"Set price public setPrice ( $price : float , $baseQuantity : float | null = null ) : \\Einvoicing\\InvoiceLine","title":"setPrice()"},{"location":"reference/invoice-line/#getbasequantity","text":"Get base quantity public getBaseQuantity () : float","title":"getBaseQuantity()"},{"location":"reference/invoice-line/#setbasequantity","text":"Set base quantity public setBaseQuantity ( $baseQuantity : float ) : \\Einvoicing\\InvoiceLine","title":"setBaseQuantity()"},{"location":"reference/invoice-line/#getnetamountbeforeallowancescharges","text":"Get total net amount (without VAT) before allowances/charges public getNetAmountBeforeAllowancesCharges () : float | null","title":"getNetAmountBeforeAllowancesCharges()"},{"location":"reference/invoice-line/#getallowancesamount","text":"Get allowances total amount public getAllowancesAmount () : float","title":"getAllowancesAmount()"},{"location":"reference/invoice-line/#getchargesamount","text":"Get charges total amount public getChargesAmount () : float","title":"getChargesAmount()"},{"location":"reference/invoice-line/#getnetamount","text":"Get total net amount (without VAT) NOTE: inclusive of line level allowances and charges public getNetAmount () : float | null","title":"getNetAmount()"},{"location":"reference/invoice-line/#getallowances","text":"Get allowances public getAllowances () : \\Einvoicing\\AllowanceOrCharge []","title":"getAllowances()"},{"location":"reference/invoice-line/#addallowance","text":"Add allowance public addAllowance ( $allowance : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\InvoiceLine","title":"addAllowance()"},{"location":"reference/invoice-line/#removeallowance","text":"Remove allowance public removeAllowance ( $index : int ) : \\Einvoicing\\InvoiceLine","title":"removeAllowance()"},{"location":"reference/invoice-line/#clearallowances","text":"Clear all allowances public clearAllowances () : \\Einvoicing\\InvoiceLine","title":"clearAllowances()"},{"location":"reference/invoice-line/#getcharges","text":"Get charges public getCharges () : \\Einvoicing\\AllowanceOrCharge []","title":"getCharges()"},{"location":"reference/invoice-line/#addcharge","text":"Add charge public addCharge ( $charge : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\InvoiceLine","title":"addCharge()"},{"location":"reference/invoice-line/#removecharge","text":"Remove charge public removeCharge ( $index : int ) : \\Einvoicing\\InvoiceLine","title":"removeCharge()"},{"location":"reference/invoice-line/#clearcharges","text":"Clear all charges public clearCharges () : \\Einvoicing\\InvoiceLine","title":"clearCharges()"},{"location":"reference/invoice-line/#getattributes","text":"Get attributes public getAttributes () : \\Einvoicing\\Attribute []","title":"getAttributes()"},{"location":"reference/invoice-line/#addattribute","text":"Add attribute public addAttribute ( $attribute : \\Einvoicing\\Attribute ) : \\Einvoicing\\InvoiceLine","title":"addAttribute()"},{"location":"reference/invoice-line/#removeattribute","text":"Remove attribute public removeAttribute ( $index : int ) : \\Einvoicing\\InvoiceLine","title":"removeAttribute()"},{"location":"reference/invoice-line/#clearattributes","text":"Clear all attributes public clearAttributes () : \\Einvoicing\\InvoiceLine","title":"clearAttributes()"},{"location":"reference/invoice-line/#getattribute","text":"Get attribute value public getAttribute ( $name : string ) : string | null","title":"getAttribute()"},{"location":"reference/invoice-line/#setattribute","text":"Set attribute value public setAttribute ( $name : string , $value : string | null ) : \\Einvoicing\\InvoiceLine","title":"setAttribute()"},{"location":"reference/invoice-line/#getbuyeraccountingreference","text":"Get buyer accounting reference public getBuyerAccountingReference () : string | null","title":"getBuyerAccountingReference()"},{"location":"reference/invoice-line/#setbuyeraccountingreference","text":"Set buyer accounting reference public setBuyerAccountingReference ( $buyerAccountingReference : string | null ) : \\Einvoicing\\InvoiceLine","title":"setBuyerAccountingReference()"},{"location":"reference/invoice-line/#getclassificationidentifiers","text":"Get classification identifiers public getClassificationIdentifiers () : \\Einvoicing\\Identifier []","title":"getClassificationIdentifiers()"},{"location":"reference/invoice-line/#addclassificationidentifier","text":"Add classification identifier public addClassificationIdentifier ( $identifier : \\Einvoicing\\Identifier ) : \\Einvoicing\\InvoiceLine","title":"addClassificationIdentifier()"},{"location":"reference/invoice-line/#removeclassificationidentifier","text":"Remove classification identifier public removeClassificationIdentifier ( $index : int ) : \\Einvoicing\\InvoiceLine","title":"removeClassificationIdentifier()"},{"location":"reference/invoice-line/#clearclassificationidentifiers","text":"Clear all classification identifiers public clearClassificationIdentifiers () : \\Einvoicing\\InvoiceLine","title":"clearClassificationIdentifiers()"},{"location":"reference/invoice-line/#getperiodstartdate","text":"Get period start date public getPeriodStartDate () : \\DateTime | null","title":"getPeriodStartDate()"},{"location":"reference/invoice-line/#setperiodstartdate","text":"Set period start date public setPeriodStartDate ( $periodStartDate : \\DateTime | null ) : \\Einvoicing\\InvoiceLine","title":"setPeriodStartDate()"},{"location":"reference/invoice-line/#getperiodenddate","text":"Get period end date public getPeriodEndDate () : \\DateTime | null","title":"getPeriodEndDate()"},{"location":"reference/invoice-line/#setperiodenddate","text":"Set period end date public setPeriodEndDate ( $periodEndDate : \\DateTime | null ) : \\Einvoicing\\InvoiceLine","title":"setPeriodEndDate()"},{"location":"reference/invoice-line/#getvatcategory","text":"Get VAT category code public getVatCategory () : string","title":"getVatCategory()"},{"location":"reference/invoice-line/#setvatcategory","text":"Set VAT category code public setVatCategory ( $categoryCode : string ) : \\Einvoicing\\InvoiceLine","title":"setVatCategory()"},{"location":"reference/invoice-line/#getvatrate","text":"Get VAT rate public getVatRate () : float | null","title":"getVatRate()"},{"location":"reference/invoice-line/#setvatrate","text":"Set VAT rate public setVatRate ( $rate : float | null ) : \\Einvoicing\\InvoiceLine","title":"setVatRate()"},{"location":"reference/invoice-line/#getvatexemptionreasoncode","text":"Get VAT exemption reason code public getVatExemptionReasonCode () : string | null","title":"getVatExemptionReasonCode()"},{"location":"reference/invoice-line/#setvatexemptionreasoncode","text":"Set VAT exemption reason code public setVatExemptionReasonCode ( $reasonCode : string | null ) : \\Einvoicing\\InvoiceLine","title":"setVatExemptionReasonCode()"},{"location":"reference/invoice-line/#getvatexemptionreason","text":"Get VAT exemption reason public getVatExemptionReason () : string | null","title":"getVatExemptionReason()"},{"location":"reference/invoice-line/#setvatexemptionreason","text":"Set VAT exemption reason public setVatExemptionReason ( $reason : string | null ) : \\Einvoicing\\InvoiceLine","title":"setVatExemptionReason()"},{"location":"reference/invoice-reference/","text":"\\Einvoicing\\InvoiceReference \u00b6 __construct() \u00b6 Class constructor public __construct ( $value : string , $issueDate : \\DateTime | null = null ) Parameters $value : string \u2014 Value $issueDate : \\DateTime | null \u2014 Issue date getValue() \u00b6 Get value public getValue () : string Returns string \u2014 Value setValue() \u00b6 Set value public setValue ( $value : string ) : \\Einvoicing\\InvoiceReference Parameters $value : string \u2014 Value Returns \\Einvoicing\\InvoiceReference \u2014 Invoice reference instance getIssueDate() \u00b6 Get issue date public getIssueDate () : \\DateTime | null Returns \\DateTime | null \u2014 Issue date setIssueDate() \u00b6 Set issue date public setIssueDate ( $issueDate : \\DateTime | null ) : \\Einvoicing\\InvoiceReference Parameters $issueDate : \\DateTime | null \u2014 Issue date Returns \\Einvoicing\\InvoiceReference \u2014 Invoice reference instance","title":"InvoiceReference"},{"location":"reference/invoice-reference/#einvoicinginvoicereference","text":"","title":"\\Einvoicing\\InvoiceReference"},{"location":"reference/invoice-reference/#__construct","text":"Class constructor public __construct ( $value : string , $issueDate : \\DateTime | null = null )","title":"__construct()"},{"location":"reference/invoice-reference/#getvalue","text":"Get value public getValue () : string","title":"getValue()"},{"location":"reference/invoice-reference/#setvalue","text":"Set value public setValue ( $value : string ) : \\Einvoicing\\InvoiceReference","title":"setValue()"},{"location":"reference/invoice-reference/#getissuedate","text":"Get issue date public getIssueDate () : \\DateTime | null","title":"getIssueDate()"},{"location":"reference/invoice-reference/#setissuedate","text":"Set issue date public setIssueDate ( $issueDate : \\DateTime | null ) : \\Einvoicing\\InvoiceReference","title":"setIssueDate()"},{"location":"reference/invoice-totals/","text":"\\Einvoicing\\Models\\InvoiceTotals \u00b6 $currency \u00b6 Invoice currency code public string $currency $vatCurrency \u00b6 VAT accounting currency code public string | null $vatCurrency = null $netAmount \u00b6 Sum of all invoice line net amounts public float $netAmount = 0 $allowancesAmount \u00b6 Sum of all allowances on document level public float $allowancesAmount = 0 $chargesAmount \u00b6 Sum of all charges on document level public float $chargesAmount = 0 $vatAmount \u00b6 Total VAT amount for the invoice public float $vatAmount = 0 $taxExclusiveAmount \u00b6 Invoice total amount without VAT public float $taxExclusiveAmount = 0 $taxInclusiveAmount \u00b6 Invoice total amount with VAT public float $taxInclusiveAmount = 0 $paidAmount \u00b6 The sum of amounts which have been paid in advance public float $paidAmount = 0 $roundingAmount \u00b6 The amount to be added to the invoice total to round the amount to be paid public float $roundingAmount = 0 $customVatAmount \u00b6 Total VAT amount in accounting currency public float | null $customVatAmount = null $payableAmount \u00b6 Amount due for payment public float $payableAmount = 0 $vatBreakdown \u00b6 Group of business terms providing information about VAT breakdown public \\Einvoicing\\Models\\VatBreakdown [] $vatBreakdown = [] fromInvoice() \u00b6 Create instance from invoice public static fromInvoice ( $inv : \\Einvoicing\\Invoice , $round : bool = true ) : \\Einvoicing\\Models\\InvoiceTotals Parameters $inv : \\Einvoicing\\Invoice \u2014 Invoice instance $round : bool \u2014 Whether to round values or not Returns \\Einvoicing\\Models\\InvoiceTotals \u2014 Totals instance","title":"Models\\InvoiceTotals"},{"location":"reference/invoice-totals/#einvoicingmodelsinvoicetotals","text":"","title":"\\Einvoicing\\Models\\InvoiceTotals"},{"location":"reference/invoice-totals/#currency","text":"Invoice currency code public string $currency","title":"$currency"},{"location":"reference/invoice-totals/#vatcurrency","text":"VAT accounting currency code public string | null $vatCurrency = null","title":"$vatCurrency"},{"location":"reference/invoice-totals/#netamount","text":"Sum of all invoice line net amounts public float $netAmount = 0","title":"$netAmount"},{"location":"reference/invoice-totals/#allowancesamount","text":"Sum of all allowances on document level public float $allowancesAmount = 0","title":"$allowancesAmount"},{"location":"reference/invoice-totals/#chargesamount","text":"Sum of all charges on document level public float $chargesAmount = 0","title":"$chargesAmount"},{"location":"reference/invoice-totals/#vatamount","text":"Total VAT amount for the invoice public float $vatAmount = 0","title":"$vatAmount"},{"location":"reference/invoice-totals/#taxexclusiveamount","text":"Invoice total amount without VAT public float $taxExclusiveAmount = 0","title":"$taxExclusiveAmount"},{"location":"reference/invoice-totals/#taxinclusiveamount","text":"Invoice total amount with VAT public float $taxInclusiveAmount = 0","title":"$taxInclusiveAmount"},{"location":"reference/invoice-totals/#paidamount","text":"The sum of amounts which have been paid in advance public float $paidAmount = 0","title":"$paidAmount"},{"location":"reference/invoice-totals/#roundingamount","text":"The amount to be added to the invoice total to round the amount to be paid public float $roundingAmount = 0","title":"$roundingAmount"},{"location":"reference/invoice-totals/#customvatamount","text":"Total VAT amount in accounting currency public float | null $customVatAmount = null","title":"$customVatAmount"},{"location":"reference/invoice-totals/#payableamount","text":"Amount due for payment public float $payableAmount = 0","title":"$payableAmount"},{"location":"reference/invoice-totals/#vatbreakdown","text":"Group of business terms providing information about VAT breakdown public \\Einvoicing\\Models\\VatBreakdown [] $vatBreakdown = []","title":"$vatBreakdown"},{"location":"reference/invoice-totals/#frominvoice","text":"Create instance from invoice public static fromInvoice ( $inv : \\Einvoicing\\Invoice , $round : bool = true ) : \\Einvoicing\\Models\\InvoiceTotals","title":"fromInvoice()"},{"location":"reference/invoice/","text":"\\Einvoicing\\Invoice \u00b6 __construct() \u00b6 Invoice constructor public __construct ( $preset : string | null = null ) Parameters $preset : string | null \u2014 Preset classname or NULL for blank invoice Throws \\InvalidArgumentException if not a valid preset getDecimals() \u00b6 Get number of decimal places for a given field public getDecimals ( $field : string ) : int Parameters $field : string \u2014 Field name Returns int \u2014 Number of decimal places round() \u00b6 Round value public round ( $value : float , $field : string ) : float Parameters $value : float \u2014 Value to round $field : string \u2014 Field name Returns float \u2014 Rounded value setRoundingMatrix() \u00b6 Set rounding matrix public setRoundingMatrix ( $matrix : mixed []) : \\Einvoicing\\Invoice Parameters $matrix : mixed [] \u2014 Rounding matrix Returns \\Einvoicing\\Invoice \u2014 Invoice instance getSpecification() \u00b6 Get specification identifier public getSpecification () : string | null Returns string | null \u2014 Specification identifier setSpecification() \u00b6 Set specification identifier public setSpecification ( $specification : string ) : \\Einvoicing\\Invoice Parameters $specification : string \u2014 Specification identifier Returns \\Einvoicing\\Invoice \u2014 Invoice instance getBusinessProcess() \u00b6 Get business process type public getBusinessProcess () : string | null Returns string | null \u2014 Business process type setBusinessProcess() \u00b6 Set business process type public setBusinessProcess ( $businessProcess : string | null ) : \\Einvoicing\\Invoice Parameters $businessProcess : string | null \u2014 Business process type Returns \\Einvoicing\\Invoice \u2014 Invoice instance getNumber() \u00b6 Get invoice number public getNumber () : string | null Returns string | null \u2014 Invoice number setNumber() \u00b6 Set invoice number public setNumber ( $number : string ) : \\Einvoicing\\Invoice Parameters $number : string \u2014 Invoice number Returns \\Einvoicing\\Invoice \u2014 Invoice instance getType() \u00b6 Get invoice type code public getType () : int Returns int \u2014 Invoice type code setType() \u00b6 Set invoice type code public setType ( $typeCode : int ) : \\Einvoicing\\Invoice Parameters $typeCode : int \u2014 Invoice type code Returns \\Einvoicing\\Invoice \u2014 Invoice instance getCurrency() \u00b6 Get document currency code public getCurrency () : string Returns string \u2014 Document currency code setCurrency() \u00b6 Set document currency code public setCurrency ( $currencyCode : string ) : \\Einvoicing\\Invoice Parameters $currencyCode : string \u2014 Document currency code Returns \\Einvoicing\\Invoice \u2014 Invoice instance getVatCurrency() \u00b6 Get VAT accounting currency code public getVatCurrency () : string | null Returns string | null \u2014 VAT accounting currency code or NULL if same as document's setVatCurrency() \u00b6 Set VAT accounting currency code public setVatCurrency ( $currencyCode : string | null ) : \\Einvoicing\\Invoice Parameters $currencyCode : string | null \u2014 VAT accounting currency code or NULL if same as document's Returns \\Einvoicing\\Invoice \u2014 Invoice instance getIssueDate() \u00b6 Get invoice issue date public getIssueDate () : \\DateTime | null Returns \\DateTime | null \u2014 Invoice issue date setIssueDate() \u00b6 Set invoice issue date public setIssueDate ( $issueDate : \\DateTime ) : \\Einvoicing\\Invoice Parameters $issueDate : \\DateTime \u2014 Invoice issue date Returns \\Einvoicing\\Invoice \u2014 Invoice instance getDueDate() \u00b6 Get payment due date public getDueDate () : \\DateTime | null Returns \\DateTime | null \u2014 Payment due date setDueDate() \u00b6 Set payment due date public setDueDate ( $dueDate : \\DateTime | null ) : \\Einvoicing\\Invoice Parameters $dueDate : \\DateTime | null \u2014 Payment due date Returns \\Einvoicing\\Invoice \u2014 Invoice instance getTaxPointDate() \u00b6 Get tax point date public getTaxPointDate () : \\DateTime | null Returns \\DateTime | null \u2014 Tax point date setTaxPointDate() \u00b6 Set tax point date public setTaxPointDate ( $taxPointDate : \\DateTime | null ) : \\Einvoicing\\Invoice Parameters $taxPointDate : \\DateTime | null \u2014 Tax point date Returns \\Einvoicing\\Invoice \u2014 Invoice instance getNotes() \u00b6 Get invoice notes public getNotes () : string [] Returns string [] \u2014 Invoice notes addNote() \u00b6 Add invoice note public addNote ( $note : string ) : \\Einvoicing\\Invoice Parameters $note : string \u2014 Invoice note Returns \\Einvoicing\\Invoice \u2014 Invoice instance removeNote() \u00b6 Remove invoice note public removeNote ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Invoice note index Returns \\Einvoicing\\Invoice \u2014 Invoice instance Throws \\OutOfBoundsException if invoice note index is out of bounds clearNotes() \u00b6 Clear all invoice notes public clearNotes () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 Invoice instance getNote() \u00b6 Get invoice note Deprecated since v0.2.1 Use \\Einvoicing\\Invoice::getNotes() instead. public getNote () : string | null Returns string | null \u2014 Invoice note setNote() \u00b6 Set invoice note Deprecated since v0.2.1 Use \\Einvoicing\\Invoice::addNote() instead. public setNote ( $note : string | null ) : \\Einvoicing\\Invoice Parameters $note : string | null \u2014 Invoice note Returns \\Einvoicing\\Invoice \u2014 Invoice instance getBuyerReference() \u00b6 Get buyer reference public getBuyerReference () : string | null Returns string | null \u2014 Buyer reference setBuyerReference() \u00b6 Set buyer reference public setBuyerReference ( $buyerReference : string | null ) : \\Einvoicing\\Invoice Parameters $buyerReference : string | null \u2014 Buyer reference Returns \\Einvoicing\\Invoice \u2014 Invoice instance getPurchaseOrderReference() \u00b6 Get purchase order reference public getPurchaseOrderReference () : string | null Returns string | null \u2014 Purchase order reference setPurchaseOrderReference() \u00b6 Set purchase order reference public setPurchaseOrderReference ( $purchaseOrderReference : string | null ) : \\Einvoicing\\Invoice Parameters $purchaseOrderReference : string | null \u2014 Purchase order reference Returns \\Einvoicing\\Invoice \u2014 Invoice instance getSalesOrderReference() \u00b6 Get sales order reference public getSalesOrderReference () : string | null Returns string | null \u2014 Sales order reference setSalesOrderReference() \u00b6 Set sales order reference public setSalesOrderReference ( $salesOrderReference : string | null ) : \\Einvoicing\\Invoice Parameters $salesOrderReference : string | null \u2014 Sales order reference Returns \\Einvoicing\\Invoice \u2014 Invoice instance getTenderOrLotReference() \u00b6 Get tender or lot reference public getTenderOrLotReference () : string | null Returns string | null \u2014 Tender or lot reference setTenderOrLotReference() \u00b6 Set tender or lot reference public setTenderOrLotReference ( $tenderOrLotReference : string | null ) : \\Einvoicing\\Invoice Parameters $tenderOrLotReference : string | null \u2014 Tender or lot reference Returns \\Einvoicing\\Invoice \u2014 Invoice instance getContractReference() \u00b6 Get contract reference public getContractReference () : string | null Returns string | null \u2014 Contract reference setContractReference() \u00b6 Set contract reference public setContractReference ( $contractReference : string | null ) : \\Einvoicing\\Invoice Parameters $contractReference : string | null \u2014 Contract reference Returns \\Einvoicing\\Invoice \u2014 Invoice instance getPaidAmount() \u00b6 Get invoice prepaid amount public getPaidAmount () : float Returns float \u2014 Invoice prepaid amount setPaidAmount() \u00b6 Set invoice prepaid amount public setPaidAmount ( $paidAmount : float ) : \\Einvoicing\\Invoice Parameters $paidAmount : float \u2014 Invoice prepaid amount Returns \\Einvoicing\\Invoice \u2014 Invoice instance getRoundingAmount() \u00b6 Get invoice rounding amount public getRoundingAmount () : float Returns float \u2014 Invoice rounding amount setRoundingAmount() \u00b6 Set invoice rounding amount public setRoundingAmount ( $roundingAmount : float ) : \\Einvoicing\\Invoice Parameters $roundingAmount : float \u2014 Invoice rounding amount Returns \\Einvoicing\\Invoice \u2014 Invoice instance getCustomVatAmount() \u00b6 Get total VAT amount in VAT accounting currency public getCustomVatAmount () : float | null Returns float | null \u2014 Total amount in accounting currency setCustomVatAmount() \u00b6 Set total VAT amount in VAT accounting currency public setCustomVatAmount ( $customVatAmount : float | null ) : \\Einvoicing\\Invoice Parameters $customVatAmount : float | null \u2014 Total amount in accounting currency Returns \\Einvoicing\\Invoice \u2014 Invoice instance getSeller() \u00b6 Get seller public getSeller () : \\Einvoicing\\Party | null Returns \\Einvoicing\\Party | null \u2014 Seller instance setSeller() \u00b6 Set seller public setSeller ( $seller : \\Einvoicing\\Party ) : \\Einvoicing\\Invoice Parameters $seller : \\Einvoicing\\Party \u2014 Seller instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance getBuyer() \u00b6 Get buyer public getBuyer () : \\Einvoicing\\Party | null Returns \\Einvoicing\\Party | null \u2014 Buyer instance setBuyer() \u00b6 Set buyer public setBuyer ( $buyer : \\Einvoicing\\Party ) : \\Einvoicing\\Invoice Parameters $buyer : \\Einvoicing\\Party \u2014 Buyer instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance getPayee() \u00b6 Get payee public getPayee () : \\Einvoicing\\Party | null Returns \\Einvoicing\\Party | null \u2014 Payee instance setPayee() \u00b6 Set payee public setPayee ( $payee : \\Einvoicing\\Party | null ) : \\Einvoicing\\Invoice Parameters $payee : \\Einvoicing\\Party | null \u2014 Payee instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance getDelivery() \u00b6 Get delivery information public getDelivery () : \\Einvoicing\\Delivery | null Returns \\Einvoicing\\Delivery | null \u2014 Delivery instance setDelivery() \u00b6 Set delivery information public setDelivery ( $delivery : \\Einvoicing\\Delivery | null ) : \\Einvoicing\\Invoice Parameters $delivery : \\Einvoicing\\Delivery | null \u2014 Delivery instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance getPayment() \u00b6 Get payment information public getPayment () : \\Einvoicing\\Payments\\Payment | null Returns \\Einvoicing\\Payments\\Payment | null \u2014 Payment instance setPayment() \u00b6 Set payment information public setPayment ( $payment : \\Einvoicing\\Payments\\Payment | null ) : \\Einvoicing\\Invoice Parameters $payment : \\Einvoicing\\Payments\\Payment | null \u2014 Payment instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance getLines() \u00b6 Get invoice lines public getLines () : \\Einvoicing\\InvoiceLine [] Returns \\Einvoicing\\InvoiceLine [] \u2014 Invoice lines addLine() \u00b6 Add invoice line public addLine ( $line : \\Einvoicing\\InvoiceLine ) : \\Einvoicing\\Invoice Parameters $line : \\Einvoicing\\InvoiceLine \u2014 Invoice line instance Returns \\Einvoicing\\Invoice \u2014 Invoice instance removeLine() \u00b6 Remove invoice line public removeLine ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Invoice line index Returns \\Einvoicing\\Invoice \u2014 Invoice instance Throws \\OutOfBoundsException if line index is out of bounds clearLines() \u00b6 Clear all invoice lines public clearLines () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 Invoice instance getTotals() \u00b6 Get invoice total public getTotals ( $round : bool = true ) : \\Einvoicing\\Models\\InvoiceTotals Parameters $round : bool \u2014 Whether to round values or not Returns \\Einvoicing\\Models\\InvoiceTotals \u2014 Invoice totals getAllowances() \u00b6 Get allowances public getAllowances () : \\Einvoicing\\AllowanceOrCharge [] Returns \\Einvoicing\\AllowanceOrCharge [] \u2014 Array of allowances addAllowance() \u00b6 Add allowance public addAllowance ( $allowance : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\Invoice Parameters $allowance : \\Einvoicing\\AllowanceOrCharge \u2014 Allowance instance Returns \\Einvoicing\\Invoice \u2014 This instance removeAllowance() \u00b6 Remove allowance public removeAllowance ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Allowance index Returns \\Einvoicing\\Invoice \u2014 This instance Throws \\OutOfBoundsException if allowance index is out of bounds clearAllowances() \u00b6 Clear all allowances public clearAllowances () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 This instance getCharges() \u00b6 Get charges public getCharges () : \\Einvoicing\\AllowanceOrCharge [] Returns \\Einvoicing\\AllowanceOrCharge [] \u2014 Array of charges addCharge() \u00b6 Add charge public addCharge ( $charge : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\Invoice Parameters $charge : \\Einvoicing\\AllowanceOrCharge \u2014 Charge instance Returns \\Einvoicing\\Invoice \u2014 This instance removeCharge() \u00b6 Remove charge public removeCharge ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Charge index Returns \\Einvoicing\\Invoice \u2014 This instance Throws \\OutOfBoundsException if charge index is out of bounds clearCharges() \u00b6 Clear all charges public clearCharges () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 This instance getAttachments() \u00b6 Get attachments public getAttachments () : \\Einvoicing\\Attachment [] Returns \\Einvoicing\\Attachment [] \u2014 Array of attachments addAttachment() \u00b6 Add attachment public addAttachment ( $attachment : \\Einvoicing\\Attachment ) : \\Einvoicing\\Invoice Parameters $attachment : \\Einvoicing\\Attachment \u2014 Attachment Returns \\Einvoicing\\Invoice \u2014 This instance removeAttachment() \u00b6 Remove attachment public removeAttachment ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Attachment index Returns \\Einvoicing\\Invoice \u2014 This instance Throws \\OutOfBoundsException if attachment index is out of bounds clearAttachments() \u00b6 Clear all attachments public clearAttachments () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 This instance getBuyerAccountingReference() \u00b6 Get buyer accounting reference public getBuyerAccountingReference () : string | null Returns string | null \u2014 Buyer accounting reference setBuyerAccountingReference() \u00b6 Set buyer accounting reference public setBuyerAccountingReference ( $buyerAccountingReference : string | null ) : \\Einvoicing\\Invoice Parameters $buyerAccountingReference : string | null \u2014 Buyer accounting reference Returns \\Einvoicing\\Invoice \u2014 This instance getPeriodStartDate() \u00b6 Get period start date public getPeriodStartDate () : \\DateTime | null Returns \\DateTime | null \u2014 Period start date setPeriodStartDate() \u00b6 Set period start date public setPeriodStartDate ( $periodStartDate : \\DateTime | null ) : \\Einvoicing\\Invoice Parameters $periodStartDate : \\DateTime | null \u2014 Period start date Returns \\Einvoicing\\Invoice \u2014 This instance getPeriodEndDate() \u00b6 Get period end date public getPeriodEndDate () : \\DateTime | null Returns \\DateTime | null \u2014 Period end date setPeriodEndDate() \u00b6 Set period end date public setPeriodEndDate ( $periodEndDate : \\DateTime | null ) : \\Einvoicing\\Invoice Parameters $periodEndDate : \\DateTime | null \u2014 Period end date Returns \\Einvoicing\\Invoice \u2014 This instance validate() \u00b6 Validate invoice public validate () Throws \\Einvoicing\\Exceptions\\ValidationException if failed to pass validation getPrecedingInvoiceReferences() \u00b6 Get preceding invoice references public getPrecedingInvoiceReferences () : \\Einvoicing\\InvoiceReference [] Returns \\Einvoicing\\InvoiceReference [] \u2014 Array of preceding invoice references addPrecedingInvoiceReference() \u00b6 Add preceding invoice reference public addPrecedingInvoiceReference ( $reference : \\Einvoicing\\InvoiceReference ) : \\Einvoicing\\Invoice Parameters $reference : \\Einvoicing\\InvoiceReference \u2014 Preceding invoice reference Returns \\Einvoicing\\Invoice \u2014 This instance removePrecedingInvoiceReference() \u00b6 Remove preceding invoice reference public removePrecedingInvoiceReference ( $index : int ) : \\Einvoicing\\Invoice Parameters $index : int \u2014 Preceding invoice reference index Returns \\Einvoicing\\Invoice \u2014 This instance Throws \\OutOfBoundsException if preceding invoice reference index is out of bounds clearPrecedingInvoiceReferences() \u00b6 Clear all preceding invoice references public clearPrecedingInvoiceReferences () : \\Einvoicing\\Invoice Returns \\Einvoicing\\Invoice \u2014 This instance","title":"Invoice"},{"location":"reference/invoice/#einvoicinginvoice","text":"","title":"\\Einvoicing\\Invoice"},{"location":"reference/invoice/#__construct","text":"Invoice constructor public __construct ( $preset : string | null = null )","title":"__construct()"},{"location":"reference/invoice/#getdecimals","text":"Get number of decimal places for a given field public getDecimals ( $field : string ) : int","title":"getDecimals()"},{"location":"reference/invoice/#round","text":"Round value public round ( $value : float , $field : string ) : float","title":"round()"},{"location":"reference/invoice/#setroundingmatrix","text":"Set rounding matrix public setRoundingMatrix ( $matrix : mixed []) : \\Einvoicing\\Invoice","title":"setRoundingMatrix()"},{"location":"reference/invoice/#getspecification","text":"Get specification identifier public getSpecification () : string | null","title":"getSpecification()"},{"location":"reference/invoice/#setspecification","text":"Set specification identifier public setSpecification ( $specification : string ) : \\Einvoicing\\Invoice","title":"setSpecification()"},{"location":"reference/invoice/#getbusinessprocess","text":"Get business process type public getBusinessProcess () : string | null","title":"getBusinessProcess()"},{"location":"reference/invoice/#setbusinessprocess","text":"Set business process type public setBusinessProcess ( $businessProcess : string | null ) : \\Einvoicing\\Invoice","title":"setBusinessProcess()"},{"location":"reference/invoice/#getnumber","text":"Get invoice number public getNumber () : string | null","title":"getNumber()"},{"location":"reference/invoice/#setnumber","text":"Set invoice number public setNumber ( $number : string ) : \\Einvoicing\\Invoice","title":"setNumber()"},{"location":"reference/invoice/#gettype","text":"Get invoice type code public getType () : int","title":"getType()"},{"location":"reference/invoice/#settype","text":"Set invoice type code public setType ( $typeCode : int ) : \\Einvoicing\\Invoice","title":"setType()"},{"location":"reference/invoice/#getcurrency","text":"Get document currency code public getCurrency () : string","title":"getCurrency()"},{"location":"reference/invoice/#setcurrency","text":"Set document currency code public setCurrency ( $currencyCode : string ) : \\Einvoicing\\Invoice","title":"setCurrency()"},{"location":"reference/invoice/#getvatcurrency","text":"Get VAT accounting currency code public getVatCurrency () : string | null","title":"getVatCurrency()"},{"location":"reference/invoice/#setvatcurrency","text":"Set VAT accounting currency code public setVatCurrency ( $currencyCode : string | null ) : \\Einvoicing\\Invoice","title":"setVatCurrency()"},{"location":"reference/invoice/#getissuedate","text":"Get invoice issue date public getIssueDate () : \\DateTime | null","title":"getIssueDate()"},{"location":"reference/invoice/#setissuedate","text":"Set invoice issue date public setIssueDate ( $issueDate : \\DateTime ) : \\Einvoicing\\Invoice","title":"setIssueDate()"},{"location":"reference/invoice/#getduedate","text":"Get payment due date public getDueDate () : \\DateTime | null","title":"getDueDate()"},{"location":"reference/invoice/#setduedate","text":"Set payment due date public setDueDate ( $dueDate : \\DateTime | null ) : \\Einvoicing\\Invoice","title":"setDueDate()"},{"location":"reference/invoice/#gettaxpointdate","text":"Get tax point date public getTaxPointDate () : \\DateTime | null","title":"getTaxPointDate()"},{"location":"reference/invoice/#settaxpointdate","text":"Set tax point date public setTaxPointDate ( $taxPointDate : \\DateTime | null ) : \\Einvoicing\\Invoice","title":"setTaxPointDate()"},{"location":"reference/invoice/#getnotes","text":"Get invoice notes public getNotes () : string []","title":"getNotes()"},{"location":"reference/invoice/#addnote","text":"Add invoice note public addNote ( $note : string ) : \\Einvoicing\\Invoice","title":"addNote()"},{"location":"reference/invoice/#removenote","text":"Remove invoice note public removeNote ( $index : int ) : \\Einvoicing\\Invoice","title":"removeNote()"},{"location":"reference/invoice/#clearnotes","text":"Clear all invoice notes public clearNotes () : \\Einvoicing\\Invoice","title":"clearNotes()"},{"location":"reference/invoice/#getnote","text":"Get invoice note Deprecated since v0.2.1 Use \\Einvoicing\\Invoice::getNotes() instead. public getNote () : string | null","title":"getNote()"},{"location":"reference/invoice/#setnote","text":"Set invoice note Deprecated since v0.2.1 Use \\Einvoicing\\Invoice::addNote() instead. public setNote ( $note : string | null ) : \\Einvoicing\\Invoice","title":"setNote()"},{"location":"reference/invoice/#getbuyerreference","text":"Get buyer reference public getBuyerReference () : string | null","title":"getBuyerReference()"},{"location":"reference/invoice/#setbuyerreference","text":"Set buyer reference public setBuyerReference ( $buyerReference : string | null ) : \\Einvoicing\\Invoice","title":"setBuyerReference()"},{"location":"reference/invoice/#getpurchaseorderreference","text":"Get purchase order reference public getPurchaseOrderReference () : string | null","title":"getPurchaseOrderReference()"},{"location":"reference/invoice/#setpurchaseorderreference","text":"Set purchase order reference public setPurchaseOrderReference ( $purchaseOrderReference : string | null ) : \\Einvoicing\\Invoice","title":"setPurchaseOrderReference()"},{"location":"reference/invoice/#getsalesorderreference","text":"Get sales order reference public getSalesOrderReference () : string | null","title":"getSalesOrderReference()"},{"location":"reference/invoice/#setsalesorderreference","text":"Set sales order reference public setSalesOrderReference ( $salesOrderReference : string | null ) : \\Einvoicing\\Invoice","title":"setSalesOrderReference()"},{"location":"reference/invoice/#gettenderorlotreference","text":"Get tender or lot reference public getTenderOrLotReference () : string | null","title":"getTenderOrLotReference()"},{"location":"reference/invoice/#settenderorlotreference","text":"Set tender or lot reference public setTenderOrLotReference ( $tenderOrLotReference : string | null ) : \\Einvoicing\\Invoice","title":"setTenderOrLotReference()"},{"location":"reference/invoice/#getcontractreference","text":"Get contract reference public getContractReference () : string | null","title":"getContractReference()"},{"location":"reference/invoice/#setcontractreference","text":"Set contract reference public setContractReference ( $contractReference : string | null ) : \\Einvoicing\\Invoice","title":"setContractReference()"},{"location":"reference/invoice/#getpaidamount","text":"Get invoice prepaid amount public getPaidAmount () : float","title":"getPaidAmount()"},{"location":"reference/invoice/#setpaidamount","text":"Set invoice prepaid amount public setPaidAmount ( $paidAmount : float ) : \\Einvoicing\\Invoice","title":"setPaidAmount()"},{"location":"reference/invoice/#getroundingamount","text":"Get invoice rounding amount public getRoundingAmount () : float","title":"getRoundingAmount()"},{"location":"reference/invoice/#setroundingamount","text":"Set invoice rounding amount public setRoundingAmount ( $roundingAmount : float ) : \\Einvoicing\\Invoice","title":"setRoundingAmount()"},{"location":"reference/invoice/#getcustomvatamount","text":"Get total VAT amount in VAT accounting currency public getCustomVatAmount () : float | null","title":"getCustomVatAmount()"},{"location":"reference/invoice/#setcustomvatamount","text":"Set total VAT amount in VAT accounting currency public setCustomVatAmount ( $customVatAmount : float | null ) : \\Einvoicing\\Invoice","title":"setCustomVatAmount()"},{"location":"reference/invoice/#getseller","text":"Get seller public getSeller () : \\Einvoicing\\Party | null","title":"getSeller()"},{"location":"reference/invoice/#setseller","text":"Set seller public setSeller ( $seller : \\Einvoicing\\Party ) : \\Einvoicing\\Invoice","title":"setSeller()"},{"location":"reference/invoice/#getbuyer","text":"Get buyer public getBuyer () : \\Einvoicing\\Party | null","title":"getBuyer()"},{"location":"reference/invoice/#setbuyer","text":"Set buyer public setBuyer ( $buyer : \\Einvoicing\\Party ) : \\Einvoicing\\Invoice","title":"setBuyer()"},{"location":"reference/invoice/#getpayee","text":"Get payee public getPayee () : \\Einvoicing\\Party | null","title":"getPayee()"},{"location":"reference/invoice/#setpayee","text":"Set payee public setPayee ( $payee : \\Einvoicing\\Party | null ) : \\Einvoicing\\Invoice","title":"setPayee()"},{"location":"reference/invoice/#getdelivery","text":"Get delivery information public getDelivery () : \\Einvoicing\\Delivery | null","title":"getDelivery()"},{"location":"reference/invoice/#setdelivery","text":"Set delivery information public setDelivery ( $delivery : \\Einvoicing\\Delivery | null ) : \\Einvoicing\\Invoice","title":"setDelivery()"},{"location":"reference/invoice/#getpayment","text":"Get payment information public getPayment () : \\Einvoicing\\Payments\\Payment | null","title":"getPayment()"},{"location":"reference/invoice/#setpayment","text":"Set payment information public setPayment ( $payment : \\Einvoicing\\Payments\\Payment | null ) : \\Einvoicing\\Invoice","title":"setPayment()"},{"location":"reference/invoice/#getlines","text":"Get invoice lines public getLines () : \\Einvoicing\\InvoiceLine []","title":"getLines()"},{"location":"reference/invoice/#addline","text":"Add invoice line public addLine ( $line : \\Einvoicing\\InvoiceLine ) : \\Einvoicing\\Invoice","title":"addLine()"},{"location":"reference/invoice/#removeline","text":"Remove invoice line public removeLine ( $index : int ) : \\Einvoicing\\Invoice","title":"removeLine()"},{"location":"reference/invoice/#clearlines","text":"Clear all invoice lines public clearLines () : \\Einvoicing\\Invoice","title":"clearLines()"},{"location":"reference/invoice/#gettotals","text":"Get invoice total public getTotals ( $round : bool = true ) : \\Einvoicing\\Models\\InvoiceTotals","title":"getTotals()"},{"location":"reference/invoice/#getallowances","text":"Get allowances public getAllowances () : \\Einvoicing\\AllowanceOrCharge []","title":"getAllowances()"},{"location":"reference/invoice/#addallowance","text":"Add allowance public addAllowance ( $allowance : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\Invoice","title":"addAllowance()"},{"location":"reference/invoice/#removeallowance","text":"Remove allowance public removeAllowance ( $index : int ) : \\Einvoicing\\Invoice","title":"removeAllowance()"},{"location":"reference/invoice/#clearallowances","text":"Clear all allowances public clearAllowances () : \\Einvoicing\\Invoice","title":"clearAllowances()"},{"location":"reference/invoice/#getcharges","text":"Get charges public getCharges () : \\Einvoicing\\AllowanceOrCharge []","title":"getCharges()"},{"location":"reference/invoice/#addcharge","text":"Add charge public addCharge ( $charge : \\Einvoicing\\AllowanceOrCharge ) : \\Einvoicing\\Invoice","title":"addCharge()"},{"location":"reference/invoice/#removecharge","text":"Remove charge public removeCharge ( $index : int ) : \\Einvoicing\\Invoice","title":"removeCharge()"},{"location":"reference/invoice/#clearcharges","text":"Clear all charges public clearCharges () : \\Einvoicing\\Invoice","title":"clearCharges()"},{"location":"reference/invoice/#getattachments","text":"Get attachments public getAttachments () : \\Einvoicing\\Attachment []","title":"getAttachments()"},{"location":"reference/invoice/#addattachment","text":"Add attachment public addAttachment ( $attachment : \\Einvoicing\\Attachment ) : \\Einvoicing\\Invoice","title":"addAttachment()"},{"location":"reference/invoice/#removeattachment","text":"Remove attachment public removeAttachment ( $index : int ) : \\Einvoicing\\Invoice","title":"removeAttachment()"},{"location":"reference/invoice/#clearattachments","text":"Clear all attachments public clearAttachments () : \\Einvoicing\\Invoice","title":"clearAttachments()"},{"location":"reference/invoice/#getbuyeraccountingreference","text":"Get buyer accounting reference public getBuyerAccountingReference () : string | null","title":"getBuyerAccountingReference()"},{"location":"reference/invoice/#setbuyeraccountingreference","text":"Set buyer accounting reference public setBuyerAccountingReference ( $buyerAccountingReference : string | null ) : \\Einvoicing\\Invoice","title":"setBuyerAccountingReference()"},{"location":"reference/invoice/#getperiodstartdate","text":"Get period start date public getPeriodStartDate () : \\DateTime | null","title":"getPeriodStartDate()"},{"location":"reference/invoice/#setperiodstartdate","text":"Set period start date public setPeriodStartDate ( $periodStartDate : \\DateTime | null ) : \\Einvoicing\\Invoice","title":"setPeriodStartDate()"},{"location":"reference/invoice/#getperiodenddate","text":"Get period end date public getPeriodEndDate () : \\DateTime | null","title":"getPeriodEndDate()"},{"location":"reference/invoice/#setperiodenddate","text":"Set period end date public setPeriodEndDate ( $periodEndDate : \\DateTime | null ) : \\Einvoicing\\Invoice","title":"setPeriodEndDate()"},{"location":"reference/invoice/#validate","text":"Validate invoice public validate ()","title":"validate()"},{"location":"reference/invoice/#getprecedinginvoicereferences","text":"Get preceding invoice references public getPrecedingInvoiceReferences () : \\Einvoicing\\InvoiceReference []","title":"getPrecedingInvoiceReferences()"},{"location":"reference/invoice/#addprecedinginvoicereference","text":"Add preceding invoice reference public addPrecedingInvoiceReference ( $reference : \\Einvoicing\\InvoiceReference ) : \\Einvoicing\\Invoice","title":"addPrecedingInvoiceReference()"},{"location":"reference/invoice/#removeprecedinginvoicereference","text":"Remove preceding invoice reference public removePrecedingInvoiceReference ( $index : int ) : \\Einvoicing\\Invoice","title":"removePrecedingInvoiceReference()"},{"location":"reference/invoice/#clearprecedinginvoicereferences","text":"Clear all preceding invoice references public clearPrecedingInvoiceReferences () : \\Einvoicing\\Invoice","title":"clearPrecedingInvoiceReferences()"},{"location":"reference/mandate/","text":"\\Einvoicing\\Payments\\Mandate \u00b6 getReference() \u00b6 Get mandate reference ID public getReference () : string | null Returns string | null \u2014 Mandate reference ID setReference() \u00b6 Set mandate reference ID public setReference ( $reference : string | null ) : \\Einvoicing\\Payments\\Mandate Parameters $reference : string | null \u2014 Mandate reference ID Returns \\Einvoicing\\Payments\\Mandate \u2014 Mandate instance getAccount() \u00b6 Get debited account ID public getAccount () : string | null Returns string | null \u2014 Debited account ID setAccount() \u00b6 Set debited account ID public setAccount ( $account : string | null ) : \\Einvoicing\\Payments\\Mandate Parameters $account : string | null \u2014 Debited account ID Returns \\Einvoicing\\Payments\\Mandate \u2014 Mandate instance","title":"Payments\\Mandate"},{"location":"reference/mandate/#einvoicingpaymentsmandate","text":"","title":"\\Einvoicing\\Payments\\Mandate"},{"location":"reference/mandate/#getreference","text":"Get mandate reference ID public getReference () : string | null","title":"getReference()"},{"location":"reference/mandate/#setreference","text":"Set mandate reference ID public setReference ( $reference : string | null ) : \\Einvoicing\\Payments\\Mandate","title":"setReference()"},{"location":"reference/mandate/#getaccount","text":"Get debited account ID public getAccount () : string | null","title":"getAccount()"},{"location":"reference/mandate/#setaccount","text":"Set debited account ID public setAccount ( $account : string | null ) : \\Einvoicing\\Payments\\Mandate","title":"setAccount()"},{"location":"reference/nlcius/","text":"\\Einvoicing\\Presets\\Nlcius \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\Nlcius"},{"location":"reference/nlcius/#einvoicingpresetsnlcius","text":"","title":"\\Einvoicing\\Presets\\Nlcius"},{"location":"reference/nlcius/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/nlcius/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/nlcius/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/party/","text":"\\Einvoicing\\Party \u00b6 getElectronicAddress() \u00b6 Get electronic address public getElectronicAddress () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Electronic address setElectronicAddress() \u00b6 Set electronic address public setElectronicAddress ( $electronicAddress : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party Parameters $electronicAddress : \\Einvoicing\\Identifier | null \u2014 Electronic address Returns \\Einvoicing\\Party \u2014 Party instance getName() \u00b6 Get party legal name public getName () : string | null Returns string | null \u2014 Party legal name setName() \u00b6 Set party legal name public setName ( $name : string | null ) : \\Einvoicing\\Party Parameters $name : string | null \u2014 Party legal name Returns \\Einvoicing\\Party \u2014 Party instance getTradingName() \u00b6 Get party trading name (also known as business name) public getTradingName () : string | null Returns string | null \u2014 Party trading name setTradingName() \u00b6 Set party trading name (also known as business name) public setTradingName ( $tradingName : string | null ) : \\Einvoicing\\Party Parameters $tradingName : string | null \u2014 Party trading name Returns \\Einvoicing\\Party \u2014 Party instance getCompanyId() \u00b6 Get party company legal ID public getCompanyId () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Party company legal ID setCompanyId() \u00b6 Set party company legal ID public setCompanyId ( $companyId : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party Parameters $companyId : \\Einvoicing\\Identifier | null \u2014 Party company legal ID Returns \\Einvoicing\\Party \u2014 Party instance getVatNumber() \u00b6 Get party VAT number public getVatNumber () : string | null Returns string | null \u2014 Party VAT number setVatNumber() \u00b6 Set party VAT number public setVatNumber ( $vatNumber : string | null ) : \\Einvoicing\\Party Parameters $vatNumber : string | null \u2014 Party VAT number Returns \\Einvoicing\\Party \u2014 Party instance getTaxRegistrationId() \u00b6 Get tax registration ID public getTaxRegistrationId () : \\Einvoicing\\Identifier | null Returns \\Einvoicing\\Identifier | null \u2014 Tax registration ID setTaxRegistrationId() \u00b6 Set tax registration ID public setTaxRegistrationId ( $taxRegistrationId : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party Parameters $taxRegistrationId : \\Einvoicing\\Identifier | null \u2014 Tax registration ID Returns \\Einvoicing\\Party \u2014 Party instance getLegalInformation() \u00b6 Get additional legal information public getLegalInformation () : string | null Returns string | null \u2014 Additional legal information setLegalInformation() \u00b6 Set additional legal information public setLegalInformation ( $legalInformation : string | null ) : \\Einvoicing\\Party Parameters $legalInformation : string | null \u2014 Additional legal information Returns \\Einvoicing\\Party \u2014 Party instance getContactName() \u00b6 Get contact point name public getContactName () : string | null Returns string | null \u2014 Contact name setContactName() \u00b6 Set contact point name public setContactName ( $contactName : string | null ) : \\Einvoicing\\Party Parameters $contactName : string | null \u2014 Contact name Returns \\Einvoicing\\Party \u2014 This instance getContactPhone() \u00b6 Get contact point phone number public getContactPhone () : string | null Returns string | null \u2014 Contact phone number setContactPhone() \u00b6 Set contact point phone number public setContactPhone ( $contactPhone : string | null ) : \\Einvoicing\\Party Parameters $contactPhone : string | null \u2014 Contact phone number Returns \\Einvoicing\\Party \u2014 This instance getContactEmail() \u00b6 Get contact point email addresss public getContactEmail () : string | null Returns string | null \u2014 Contact email address setContactEmail() \u00b6 Set contact point email address public setContactEmail ( $contactEmail : string | null ) : \\Einvoicing\\Party Parameters $contactEmail : string | null \u2014 Contact email address Returns \\Einvoicing\\Party \u2014 This instance hasContactInformation() \u00b6 Has contact information public hasContactInformation () : bool Returns bool \u2014 TRUE if party has any contact information, FALSE otherwise getIdentifiers() \u00b6 Get additional identifiers public getIdentifiers () : \\Einvoicing\\Identifier [] Returns \\Einvoicing\\Identifier [] \u2014 Array of identifiers addIdentifier() \u00b6 Add additional identifier public addIdentifier ( $identifier : \\Einvoicing\\Identifier ) : \\Einvoicing\\Party Parameters $identifier : \\Einvoicing\\Identifier \u2014 Identifier instance Returns \\Einvoicing\\Party \u2014 This instance removeIdentifier() \u00b6 Remove additional identifier public removeIdentifier ( $index : int ) : \\Einvoicing\\Party Parameters $index : int \u2014 Identifier index Returns \\Einvoicing\\Party \u2014 This instance Throws \\OutOfBoundsException if identifier index is out of bounds clearIdentifiers() \u00b6 Clear all additional identifiers public clearIdentifiers () : \\Einvoicing\\Party Returns \\Einvoicing\\Party \u2014 This instance getAddress() \u00b6 Get address lines public getAddress () : string [] Returns string [] \u2014 Address lines (up to 3 lines) setAddress() \u00b6 Set address lines public setAddress ( $addressLines : string []) : \\Einvoicing\\Party Parameters $addressLines : string [] \u2014 Address lines (up to 3 lines) Returns \\Einvoicing\\Party \u2014 This instance Throws \\InvalidArgumentException if more than 3 lines are provided getCity() \u00b6 Get city name public getCity () : string | null Returns string | null \u2014 City name setCity() \u00b6 Set city name public setCity ( $city : string | null ) : \\Einvoicing\\Party Parameters $city : string | null \u2014 City name Returns \\Einvoicing\\Party \u2014 This instance getPostalCode() \u00b6 Get postal code public getPostalCode () : string | null Returns string | null \u2014 Postal code setPostalCode() \u00b6 Set postal code public setPostalCode ( $postalCode : string | null ) : \\Einvoicing\\Party Parameters $postalCode : string | null \u2014 Postal code Returns \\Einvoicing\\Party \u2014 This instance getSubdivision() \u00b6 Get country subdivision (region, province, etc.) public getSubdivision () : string | null Returns string | null \u2014 Country subdivision setSubdivision() \u00b6 Set country subdivision (region, province, etc.) public setSubdivision ( $subdivision : string | null ) : \\Einvoicing\\Party Parameters $subdivision : string | null \u2014 Country subdivision Returns \\Einvoicing\\Party \u2014 This instance getCountry() \u00b6 Get country code public getCountry () : string | null Returns string | null \u2014 Country code setCountry() \u00b6 Set country code public setCountry ( $countryCode : string | null ) : \\Einvoicing\\Party Parameters $countryCode : string | null \u2014 Country code Returns \\Einvoicing\\Party \u2014 This instance","title":"Party"},{"location":"reference/party/#einvoicingparty","text":"","title":"\\Einvoicing\\Party"},{"location":"reference/party/#getelectronicaddress","text":"Get electronic address public getElectronicAddress () : \\Einvoicing\\Identifier | null","title":"getElectronicAddress()"},{"location":"reference/party/#setelectronicaddress","text":"Set electronic address public setElectronicAddress ( $electronicAddress : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party","title":"setElectronicAddress()"},{"location":"reference/party/#getname","text":"Get party legal name public getName () : string | null","title":"getName()"},{"location":"reference/party/#setname","text":"Set party legal name public setName ( $name : string | null ) : \\Einvoicing\\Party","title":"setName()"},{"location":"reference/party/#gettradingname","text":"Get party trading name (also known as business name) public getTradingName () : string | null","title":"getTradingName()"},{"location":"reference/party/#settradingname","text":"Set party trading name (also known as business name) public setTradingName ( $tradingName : string | null ) : \\Einvoicing\\Party","title":"setTradingName()"},{"location":"reference/party/#getcompanyid","text":"Get party company legal ID public getCompanyId () : \\Einvoicing\\Identifier | null","title":"getCompanyId()"},{"location":"reference/party/#setcompanyid","text":"Set party company legal ID public setCompanyId ( $companyId : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party","title":"setCompanyId()"},{"location":"reference/party/#getvatnumber","text":"Get party VAT number public getVatNumber () : string | null","title":"getVatNumber()"},{"location":"reference/party/#setvatnumber","text":"Set party VAT number public setVatNumber ( $vatNumber : string | null ) : \\Einvoicing\\Party","title":"setVatNumber()"},{"location":"reference/party/#gettaxregistrationid","text":"Get tax registration ID public getTaxRegistrationId () : \\Einvoicing\\Identifier | null","title":"getTaxRegistrationId()"},{"location":"reference/party/#settaxregistrationid","text":"Set tax registration ID public setTaxRegistrationId ( $taxRegistrationId : \\Einvoicing\\Identifier | null ) : \\Einvoicing\\Party","title":"setTaxRegistrationId()"},{"location":"reference/party/#getlegalinformation","text":"Get additional legal information public getLegalInformation () : string | null","title":"getLegalInformation()"},{"location":"reference/party/#setlegalinformation","text":"Set additional legal information public setLegalInformation ( $legalInformation : string | null ) : \\Einvoicing\\Party","title":"setLegalInformation()"},{"location":"reference/party/#getcontactname","text":"Get contact point name public getContactName () : string | null","title":"getContactName()"},{"location":"reference/party/#setcontactname","text":"Set contact point name public setContactName ( $contactName : string | null ) : \\Einvoicing\\Party","title":"setContactName()"},{"location":"reference/party/#getcontactphone","text":"Get contact point phone number public getContactPhone () : string | null","title":"getContactPhone()"},{"location":"reference/party/#setcontactphone","text":"Set contact point phone number public setContactPhone ( $contactPhone : string | null ) : \\Einvoicing\\Party","title":"setContactPhone()"},{"location":"reference/party/#getcontactemail","text":"Get contact point email addresss public getContactEmail () : string | null","title":"getContactEmail()"},{"location":"reference/party/#setcontactemail","text":"Set contact point email address public setContactEmail ( $contactEmail : string | null ) : \\Einvoicing\\Party","title":"setContactEmail()"},{"location":"reference/party/#hascontactinformation","text":"Has contact information public hasContactInformation () : bool","title":"hasContactInformation()"},{"location":"reference/party/#getidentifiers","text":"Get additional identifiers public getIdentifiers () : \\Einvoicing\\Identifier []","title":"getIdentifiers()"},{"location":"reference/party/#addidentifier","text":"Add additional identifier public addIdentifier ( $identifier : \\Einvoicing\\Identifier ) : \\Einvoicing\\Party","title":"addIdentifier()"},{"location":"reference/party/#removeidentifier","text":"Remove additional identifier public removeIdentifier ( $index : int ) : \\Einvoicing\\Party","title":"removeIdentifier()"},{"location":"reference/party/#clearidentifiers","text":"Clear all additional identifiers public clearIdentifiers () : \\Einvoicing\\Party","title":"clearIdentifiers()"},{"location":"reference/party/#getaddress","text":"Get address lines public getAddress () : string []","title":"getAddress()"},{"location":"reference/party/#setaddress","text":"Set address lines public setAddress ( $addressLines : string []) : \\Einvoicing\\Party","title":"setAddress()"},{"location":"reference/party/#getcity","text":"Get city name public getCity () : string | null","title":"getCity()"},{"location":"reference/party/#setcity","text":"Set city name public setCity ( $city : string | null ) : \\Einvoicing\\Party","title":"setCity()"},{"location":"reference/party/#getpostalcode","text":"Get postal code public getPostalCode () : string | null","title":"getPostalCode()"},{"location":"reference/party/#setpostalcode","text":"Set postal code public setPostalCode ( $postalCode : string | null ) : \\Einvoicing\\Party","title":"setPostalCode()"},{"location":"reference/party/#getsubdivision","text":"Get country subdivision (region, province, etc.) public getSubdivision () : string | null","title":"getSubdivision()"},{"location":"reference/party/#setsubdivision","text":"Set country subdivision (region, province, etc.) public setSubdivision ( $subdivision : string | null ) : \\Einvoicing\\Party","title":"setSubdivision()"},{"location":"reference/party/#getcountry","text":"Get country code public getCountry () : string | null","title":"getCountry()"},{"location":"reference/party/#setcountry","text":"Set country code public setCountry ( $countryCode : string | null ) : \\Einvoicing\\Party","title":"setCountry()"},{"location":"reference/payment/","text":"\\Einvoicing\\Payments\\Payment \u00b6 getId() \u00b6 Get payment ID public getId () : string | null Returns string | null \u2014 Payment ID setId() \u00b6 Set payment ID public setId ( $id : string | null ) : \\Einvoicing\\Payments\\Payment Parameters $id : string | null \u2014 Payment ID Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getMeansCode() \u00b6 Get payment means code public getMeansCode () : string | null Returns string | null \u2014 Payment means code setMeansCode() \u00b6 Set payment means code public setMeansCode ( $meansCode : string ) : \\Einvoicing\\Payments\\Payment Parameters $meansCode : string \u2014 Payment means code Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getMeansText() \u00b6 Get payment means text public getMeansText () : string | null Returns string | null \u2014 Payment means text setMeansText() \u00b6 Set payment means text public setMeansText ( $meansText : string | null ) : \\Einvoicing\\Payments\\Payment Parameters $meansText : string | null \u2014 Payment means text Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getTerms() \u00b6 Get payment terms public getTerms () : string | null Returns string | null \u2014 Payment terms setTerms() \u00b6 Set payment terms public setTerms ( $terms : string | null ) : \\Einvoicing\\Payments\\Payment Parameters $terms : string | null \u2014 Payment terms Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getTransfers() \u00b6 Get payment transfers public getTransfers () : \\Einvoicing\\Payments\\Transfer [] Returns \\Einvoicing\\Payments\\Transfer [] \u2014 Array of transfers addTransfer() \u00b6 Add payment transfers public addTransfer ( $transfer : \\Einvoicing\\Payments\\Transfer ) : \\Einvoicing\\Payments\\Payment Parameters $transfer : \\Einvoicing\\Payments\\Transfer \u2014 Transfer instance Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance removeTransfer() \u00b6 Remove payment transfer public removeTransfer ( $index : int ) : \\Einvoicing\\Payments\\Payment Parameters $index : int \u2014 Transfer index Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance Throws \\OutOfBoundsException if transfer index is out of bounds clearTransfers() \u00b6 Clear all payment transfers public clearTransfers () : \\Einvoicing\\Payments\\Payment Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getCard() \u00b6 Get payment card public getCard () : \\Einvoicing\\Payments\\Card | null Returns \\Einvoicing\\Payments\\Card | null \u2014 Card instance setCard() \u00b6 Set payment card public setCard ( $card : \\Einvoicing\\Payments\\Card | null ) : \\Einvoicing\\Payments\\Payment Parameters $card : \\Einvoicing\\Payments\\Card | null \u2014 Card instance Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance getMandate() \u00b6 Get payment mandate public getMandate () : \\Einvoicing\\Payments\\Mandate | null Returns \\Einvoicing\\Payments\\Mandate | null \u2014 Mandate instance setMandate() \u00b6 Set payment mandate public setMandate ( $mandate : \\Einvoicing\\Payments\\Mandate | null ) : \\Einvoicing\\Payments\\Payment Parameters $mandate : \\Einvoicing\\Payments\\Mandate | null \u2014 Mandate instance Returns \\Einvoicing\\Payments\\Payment \u2014 Payment instance","title":"Payments\\Payment"},{"location":"reference/payment/#einvoicingpaymentspayment","text":"","title":"\\Einvoicing\\Payments\\Payment"},{"location":"reference/payment/#getid","text":"Get payment ID public getId () : string | null","title":"getId()"},{"location":"reference/payment/#setid","text":"Set payment ID public setId ( $id : string | null ) : \\Einvoicing\\Payments\\Payment","title":"setId()"},{"location":"reference/payment/#getmeanscode","text":"Get payment means code public getMeansCode () : string | null","title":"getMeansCode()"},{"location":"reference/payment/#setmeanscode","text":"Set payment means code public setMeansCode ( $meansCode : string ) : \\Einvoicing\\Payments\\Payment","title":"setMeansCode()"},{"location":"reference/payment/#getmeanstext","text":"Get payment means text public getMeansText () : string | null","title":"getMeansText()"},{"location":"reference/payment/#setmeanstext","text":"Set payment means text public setMeansText ( $meansText : string | null ) : \\Einvoicing\\Payments\\Payment","title":"setMeansText()"},{"location":"reference/payment/#getterms","text":"Get payment terms public getTerms () : string | null","title":"getTerms()"},{"location":"reference/payment/#setterms","text":"Set payment terms public setTerms ( $terms : string | null ) : \\Einvoicing\\Payments\\Payment","title":"setTerms()"},{"location":"reference/payment/#gettransfers","text":"Get payment transfers public getTransfers () : \\Einvoicing\\Payments\\Transfer []","title":"getTransfers()"},{"location":"reference/payment/#addtransfer","text":"Add payment transfers public addTransfer ( $transfer : \\Einvoicing\\Payments\\Transfer ) : \\Einvoicing\\Payments\\Payment","title":"addTransfer()"},{"location":"reference/payment/#removetransfer","text":"Remove payment transfer public removeTransfer ( $index : int ) : \\Einvoicing\\Payments\\Payment","title":"removeTransfer()"},{"location":"reference/payment/#cleartransfers","text":"Clear all payment transfers public clearTransfers () : \\Einvoicing\\Payments\\Payment","title":"clearTransfers()"},{"location":"reference/payment/#getcard","text":"Get payment card public getCard () : \\Einvoicing\\Payments\\Card | null","title":"getCard()"},{"location":"reference/payment/#setcard","text":"Set payment card public setCard ( $card : \\Einvoicing\\Payments\\Card | null ) : \\Einvoicing\\Payments\\Payment","title":"setCard()"},{"location":"reference/payment/#getmandate","text":"Get payment mandate public getMandate () : \\Einvoicing\\Payments\\Mandate | null","title":"getMandate()"},{"location":"reference/payment/#setmandate","text":"Set payment mandate public setMandate ( $mandate : \\Einvoicing\\Payments\\Mandate | null ) : \\Einvoicing\\Payments\\Payment","title":"setMandate()"},{"location":"reference/peppol/","text":"\\Einvoicing\\Presets\\Peppol \u00b6 getSpecification() \u00b6 Get specification identifier public getSpecification () : string Returns string \u2014 Specification identifier getRules() \u00b6 Get additional validation rules public getRules () : callable [] Returns callable [] \u2014 Map of rules setupInvoice() \u00b6 Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice ) Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance","title":"Presets\\Peppol"},{"location":"reference/peppol/#einvoicingpresetspeppol","text":"","title":"\\Einvoicing\\Presets\\Peppol"},{"location":"reference/peppol/#getspecification","text":"Get specification identifier public getSpecification () : string","title":"getSpecification()"},{"location":"reference/peppol/#getrules","text":"Get additional validation rules public getRules () : callable []","title":"getRules()"},{"location":"reference/peppol/#setupinvoice","text":"Setup invoice public setupInvoice ( $invoice : \\Einvoicing\\Invoice )","title":"setupInvoice()"},{"location":"reference/transfer/","text":"\\Einvoicing\\Payments\\Transfer \u00b6 getAccountId() \u00b6 Get receiving account ID public getAccountId () : string | null Returns string | null \u2014 Account ID setAccountId() \u00b6 Set receiving account ID public setAccountId ( $accountId : string ) : \\Einvoicing\\Payments\\Transfer Parameters $accountId : string \u2014 Account ID Returns \\Einvoicing\\Payments\\Transfer \u2014 Transfer instance getAccountName() \u00b6 Get receiving account name public getAccountName () : string | null Returns string | null \u2014 Account name setAccountName() \u00b6 Set receiving account name public setAccountName ( $accountName : string | null ) : \\Einvoicing\\Payments\\Transfer Parameters $accountName : string | null \u2014 Account name Returns \\Einvoicing\\Payments\\Transfer \u2014 Transfer instance getProvider() \u00b6 Get service provider ID public getProvider () : string | null Returns string | null \u2014 Service provider ID setProvider() \u00b6 Set service provider ID public setProvider ( $provider : string | null ) : \\Einvoicing\\Payments\\Transfer Parameters $provider : string | null \u2014 Service provider ID Returns \\Einvoicing\\Payments\\Transfer \u2014 Transfer instance","title":"Payments\\Transfer"},{"location":"reference/transfer/#einvoicingpaymentstransfer","text":"","title":"\\Einvoicing\\Payments\\Transfer"},{"location":"reference/transfer/#getaccountid","text":"Get receiving account ID public getAccountId () : string | null","title":"getAccountId()"},{"location":"reference/transfer/#setaccountid","text":"Set receiving account ID public setAccountId ( $accountId : string ) : \\Einvoicing\\Payments\\Transfer","title":"setAccountId()"},{"location":"reference/transfer/#getaccountname","text":"Get receiving account name public getAccountName () : string | null","title":"getAccountName()"},{"location":"reference/transfer/#setaccountname","text":"Set receiving account name public setAccountName ( $accountName : string | null ) : \\Einvoicing\\Payments\\Transfer","title":"setAccountName()"},{"location":"reference/transfer/#getprovider","text":"Get service provider ID public getProvider () : string | null","title":"getProvider()"},{"location":"reference/transfer/#setprovider","text":"Set service provider ID public setProvider ( $provider : string | null ) : \\Einvoicing\\Payments\\Transfer","title":"setProvider()"},{"location":"reference/ubl-reader/","text":"\\Einvoicing\\Readers\\UblReader \u00b6 import() \u00b6 Import invoice public import ( $document : string ) : \\Einvoicing\\Invoice Parameters $document : string \u2014 Document contents Returns \\Einvoicing\\Invoice \u2014 Invoice instance Throws \\InvalidArgumentException if failed to parse XML registerPreset() \u00b6 Register additional preset public registerPreset ( $classname : string ) : \\Einvoicing\\Readers\\UblReader Parameters $classname : string \u2014 Preset classname Returns \\Einvoicing\\Readers\\UblReader \u2014 This instance Throws \\InvalidArgumentException if not a valid preset classname","title":"Readers\\UblReader"},{"location":"reference/ubl-reader/#einvoicingreadersublreader","text":"","title":"\\Einvoicing\\Readers\\UblReader"},{"location":"reference/ubl-reader/#import","text":"Import invoice public import ( $document : string ) : \\Einvoicing\\Invoice","title":"import()"},{"location":"reference/ubl-reader/#registerpreset","text":"Register additional preset public registerPreset ( $classname : string ) : \\Einvoicing\\Readers\\UblReader","title":"registerPreset()"},{"location":"reference/ubl-writer/","text":"\\Einvoicing\\Writers\\UblWriter \u00b6 export() \u00b6 Export invoice public export ( $invoice : \\Einvoicing\\Invoice ) : string Parameters $invoice : \\Einvoicing\\Invoice \u2014 Invoice instance Returns string \u2014 Export contents","title":"Writers\\UblWriter"},{"location":"reference/ubl-writer/#einvoicingwritersublwriter","text":"","title":"\\Einvoicing\\Writers\\UblWriter"},{"location":"reference/ubl-writer/#export","text":"Export invoice public export ( $invoice : \\Einvoicing\\Invoice ) : string","title":"export()"},{"location":"reference/validation-exception/","text":"\\Einvoicing\\Exceptions\\ValidationException \u00b6 __construct() \u00b6 Class constructor public __construct ( $message : string , $brId : string | null = null ) Parameters $message : string \u2014 Exception message $brId : string | null \u2014 Business rule ID getBusinessRuleId() \u00b6 Get business rule ID public getBusinessRuleId () : string | null Returns string | null \u2014 Business rule ID","title":"Exceptions\\ValidationException"},{"location":"reference/validation-exception/#einvoicingexceptionsvalidationexception","text":"","title":"\\Einvoicing\\Exceptions\\ValidationException"},{"location":"reference/validation-exception/#__construct","text":"Class constructor public __construct ( $message : string , $brId : string | null = null )","title":"__construct()"},{"location":"reference/validation-exception/#getbusinessruleid","text":"Get business rule ID public getBusinessRuleId () : string | null","title":"getBusinessRuleId()"},{"location":"reference/vat-breakdown/","text":"\\Einvoicing\\Models\\VatBreakdown \u00b6 $category \u00b6 VAT category code public string $category $rate \u00b6 VAT rate as a percentage public float | null $rate $exemptionReasonCode \u00b6 VAT exemption reason code public string | null $exemptionReasonCode = null $exemptionReason \u00b6 VAT exemption reason as text public string | null $exemptionReason = null $taxableAmount \u00b6 Sum of all taxable amounts public float $taxableAmount = 0 $taxAmount \u00b6 Total VAT amount public float $taxAmount = 0","title":"Models\\VatBreakdown"},{"location":"reference/vat-breakdown/#einvoicingmodelsvatbreakdown","text":"","title":"\\Einvoicing\\Models\\VatBreakdown"},{"location":"reference/vat-breakdown/#category","text":"VAT category code public string $category","title":"$category"},{"location":"reference/vat-breakdown/#rate","text":"VAT rate as a percentage public float | null $rate","title":"$rate"},{"location":"reference/vat-breakdown/#exemptionreasoncode","text":"VAT exemption reason code public string | null $exemptionReasonCode = null","title":"$exemptionReasonCode"},{"location":"reference/vat-breakdown/#exemptionreason","text":"VAT exemption reason as text public string | null $exemptionReason = null","title":"$exemptionReason"},{"location":"reference/vat-breakdown/#taxableamount","text":"Sum of all taxable amounts public float $taxableAmount = 0","title":"$taxableAmount"},{"location":"reference/vat-breakdown/#taxamount","text":"Total VAT amount public float $taxAmount = 0","title":"$taxAmount"}]}